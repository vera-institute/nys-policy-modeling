# =============================================================================
# Program Author: Jaeok Kim
# Start Date: Dec 10, 2020
# Update Date: Dec 17, 2020
# Content: Policy Modeling
# Notes: Prison Modeling
# =============================================================================

* START ORG/ESS/LaTeX SESSION
#+begin_src emacs-lisp :results silent
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((R . t)
     (latex . t)
     (python . t)
     (shell . t)))
#+end_src
** Set org-mode confirmation of evaluation nil (Turn Off)
#+begin_src emacs-lisp :results silent
  ;; DANGER!
  ;; Do not Use Unless You Really, Really Mean It
  (setq org-confirm-babel-evaluate nil)
#+end_src

** Set org-mode confirmation of evaluation TRUE (Turn On)
#+begin_src emacs-lisp :results silent
  (setq org-confirm-babel-evaluate t)
#+end_src


* Load Package  ---------------------------------------------------------------------------
#+begin_src R :session :results silent

# .libPaths(c("/Documents/R",.libPaths()))


library(aws.s3)
library(reshape2)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
library(janitor)
library(scales)
library(openxlsx)
library(tibble)
library(foreign)
library(plyr)
library(stringr)
library(dtplyr)
library(data.table)
library(ggplot2)
library(Hmisc)
library(psych)
library(eeptools)
library(zoo)
library(ggrepel)
library(devtools)
library(ggpubr)
library(readxl)


# options(scipen=999)

#+end_src


* Setup Path and Read-in Data --------------------------- ---------------------------------
#+begin_src R :session :results silent

setwd("~/OneDrive - Vera Institute of Justice/GitHub/policy-modeling/")

# LOAD ORIGINAL DATA FROM S3

## Snapshot 2020-02-14
## "2020_02_14_DOCCS_current_clean.csv"

df.current <- s3read_using(FUN=read.csv,
                   object="2020_02_14_DOCCS_current_clean.csv",
		   bucket="vera-gjny/curated_data/ny_prison/in_custody/2020_02")

df.current <- df.current %>%
   mutate(id= seq(1, nrow(.), by=1))

## 2018 Data
doccs2018 <- read.csv("Data/DOCCSJan2018.csv")

rel.dist <- read.csv("Data/rel.dist.15yrs.csv")
rel.dist <- rel.dist[,-1]

## 2020 October
## "2020_10_01_DOCCS_current_clean.csv"

df.oct <- s3read_using(FUN=read.csv,
                   object="2020_10_01_DOCCS_current_clean.csv",
		   bucket="vera-gjny/curated_data/ny_prison/in_custody/2020_10")


#+end_src


* DONE [STEP 1]: Dataset Cleanup  -----------------------------------------------------------
#+begin_src R :session :results silent

## DATE VARIABLES
### Admission Date (date.adm)
### Release Date (date.rel)
### Parole Eligible Date (date.parole.elig)
### Mandatory Prison Release Date (date.mandatory.rel)
### Projected Prison Release Date (date.proj.rel)
### Birth Date (assume 15 as the day of birth) (date.birth)
### Age at Admission (age.adm)
### Age at Release (age.rel)
### Age at Release (age.cur)
### County (county)
### NYC vs non-NYC (NYC)
### Race: Hispanic/White/Black/Other/Missing (race)
### Number of charges (ncharge)
### Length of prison incarceration (months.prison)
### Length of jail incarceration (months.jail)
### Length of total incarceration (months.incarc)
### Proportion of sentence they served (prop.max.served)
 
doccs <- df.current


# Date Variable Format Unifying
date.var <-c("dob", "origDateRec" , "currDateRec", "earRelDate", "parHearDate", "parEligDate",
         "parEligDate", "condRelDate", "maxExpDate", "maxExpDateParSup",
	 "parBoardDisDate", "latestRelease")

for (i in date.var) {

  print(i)

  doccs[,i] <- ifelse(str_detect(doccs[,i], "^[0-9]{4}\\-"),
       paste0(substr(doccs[,i], 6,7), "/", substr(doccs[,i], 9,10), "/",
              substr(doccs[,i], 1,4)), doccs[,i])
}

# Clean Variables
doccs <- doccs %>%
   mutate(

   # Race and Ethnicity
   race.eth=ifelse(str_detect(raceEth, "HISPANIC"), "Hispanic",
            ifelse(raceEth=="WHITE", "White Non-Hispanic",
            ifelse(raceEth=="BLACK", "Black Non-Hispanic",
            ifelse(raceEth=="UNKNOWN", "Unknown",
            "Other")))),

   # Sex
   sex=ifelse(str_detect(sex, "FEMALE"), "Female",
       ifelse(str_detect(sex, "MALE"), "Male", NA)),

   # Date Variables
   DOB=as.Date(dob, format="%m/%d/%Y"),
   orig.adm.date=as.Date(origDateRec, format="%m/%d/%Y"),
   curr.adm.date=as.Date(currDateRec, format="%m/%d/%Y"),
   earl.rel.date=as.Date(earRelDate, format="%m/%d/%Y"),
   par.hear.date=as.Date(parHearDate, format="%m/%d/%Y"),
   par.elig.date=as.Date(parEligDate, format="%m/%d/%Y"),
   cond.rel.date=as.Date(condRelDate, format="%m/%d/%Y"),
   max.exp.date=as.Date(maxExpDate, format="%m/%d/%Y"),
   max.exp.par.sup.date=as.Date(maxExpDateParSup, format="%m/%d/%Y"),
   par.dis.date=as.Date(parBoardDisDate, format="%m/%d/%Y"),
   latest.rel.date=as.Date(substr(latestRelease, 1,8), format="%m/%d/%y"),

   # Custody Status
   custody.status= ifelse(str_detect(custStatus, "RELEASED"), "Released",
                   ifelse(str_detect(custStatus, "DISCHARGED"), "Discharged",
		   ifelse(str_detect(custStatus, "IN CUSTODY"), "In Custody",
		   ifelse(str_detect(custStatus, "DETAINEE"), "Detainee", NA)))),

   # County of Commitment
   county=trimws(gsub(" ", "", countyCommit), which="both"),

   # Parole Hearing Type
   par.hear.type=trimws(gsub(" ", "", parHearType), which="both"),

   # Crime Type (crime.type)
   crime.type= ifelse(vfo=="VFO", "VFO",
               ifelse(str_detect(charge1, "^(MARIHUANA|CONTR\\ SUBSTANCE|CONTR\\ SUBS|METH|PRESCRIPTION)"), "Drug",
               ifelse(str_detect(charge1, "(SODOMY|SEX|RAPE|INCEST)"), "Sex",
	       "Other"))),

   # Admission Type (adm.type)
   adm.type= ifelse(admType=="RETURN FROM PAROLE/COND REL", "Parole/Cond.Rel Revoc",
             ifelse(admType=="NEW COMMITMENT", "New Commitment",
	     "Other")),

   # Current Age (age.current, age.current.group)
   age.current=round(as.numeric(as.Date("2020-02-14", format="%Y-%m-%d")-DOB)/365.25,1),
   age.current.group=ifelse(age.current<18, "Under 18",
                     ifelse(age.current>=18 & age.current<21, "age18-20",
		     ifelse(age.current>=21 & age.current<25, "age21-24",
		     ifelse(age.current>=25 & age.current<30, "age25-29",
		     ifelse(age.current>=30 & age.current<35, "age30-34",
		     ifelse(age.current>=35 & age.current<40, "age35-39",
		     ifelse(age.current>=40 & age.current<45, "age40-44",
		     ifelse(age.current>=45 & age.current<50, "age45-49",
		     ifelse(age.current>=50 & age.current<55, "age50-54",
		     ifelse(age.current>=55 & age.current<60, "age55-59",
		     ifelse(age.current>=60, "60 or over", NA))))))))))),
   age.current.group=factor(age.current.group,
                            levels=c("Under 18", "age18-20", "age21-24", "age25-29",
				     "age30-34", "age35-39", "age40-44", "age45-49",
				     "age50-54", "age55-59", "60 or over")),

   # Age at Admission (age.adm, age.adm.group)
   age.adm=round(as.numeric((curr.adm.date-DOB))/365.25,1),
   age.adm.group=ifelse(age.adm<18, "Under 18",
                 ifelse(age.adm>=18 & age.adm<21, "age18-20",
		 ifelse(age.adm>=21 & age.adm<25, "age21-24",
		 ifelse(age.adm>=25 & age.adm<30, "age25-29",
		 ifelse(age.adm>=30 & age.adm<35, "age30-34",
		 ifelse(age.adm>=35 & age.adm<40, "age35-39",
		 ifelse(age.adm>=40 & age.adm<45, "age40-44",
		 ifelse(age.adm>=45 & age.adm<50, "age45-49",
		 ifelse(age.adm>=50 & age.adm<55, "age50-54",
		 ifelse(age.adm>=55 & age.adm<60, "age55-59",
		 ifelse(age.adm>=60, "60 or over", NA))))))))))),
   age.adm.group=factor(age.adm.group,
                        levels=c("Under 18", "age18-20", "age21-24", "age25-29",
				 "age30-34", "age35-39", "age40-44", "age45-49",
				 "age50-54", "age55-59", "60 or over")),

   # NYC vs Non-NYC (NYC)
   NYC=ifelse(county %in%  c("BRONX", "KINGS", "QUEENS", "NEW YORK", "RICHMOND"), "NYC",
       ifelse(!is.na(county), "Non-NYC", NA)),

   # Latest Release Type
   latest.rel.type=str_replace(latestRelease, "[0-9]{2}\\/[0-9]{2}\\/[0-9]{2}\\s", ""),
   latest.rel.type=trimws(gsub(" ", "", latest.rel.type), which="both"),

   # Sentence Length
   min.sent.yr=ifelse(str_detect(aggMinSent, "LIFE"), 9999, aggMinSentYears),
   min.sent.mo=aggMinSentMonths,
   min.sent.day=aggMinSentDays,

   max.sent.yr=ifelse(str_detect(aggMaxSent, "LIFE"), 9999, aggMaxSentYears),
   max.sent.mo=aggMaxSentMonths,
   max.sent.day=aggMaxSentDays,

   # Total Sentence Length in days (agg.min.sent, agg.max.sent)
   agg.min.sent=min.sent.yr*365 + min.sent.mo*30 + min.sent.day,
   agg.max.sent=max.sent.yr*365 + max.sent.mo*30 + max.sent.day,

   # Min/Max Sentence Length Imposed (min.sent, max.sent)
   min.sent=paste0(min.sent.yr, " yr ", min.sent.mo, " mo ", min.sent.day, " day"),
   max.sent=paste0(max.sent.yr, " yr " , max.sent.mo, " mo ", max.sent.day, " day"),

   min.sent=str_replace(min.sent, "^0\\ yr", ""),
   min.sent=str_replace(min.sent, "\\ 0\\ mo", ""),
   min.sent=str_replace(min.sent, "\\ 0\\ day", ""),
   min.sent=trimws(min.sent, which="both"),
   min.sent=ifelse(str_detect(min.sent, "9999 yr"), "LIFE", min.sent),
   min.sent=ifelse(str_detect(min.sent, "NA"), NA, min.sent),

   max.sent=str_replace(max.sent, "^0\\ yr", ""),
   max.sent=str_replace(max.sent, "\\ 0\\ mo", ""),
   max.sent=str_replace(max.sent, "\\ 0\\ day", ""),
   max.sent=trimws(max.sent, which="both"),
   max.sent=ifelse(str_detect(max.sent, "9999 yr"), "LIFE", max.sent),
   max.sent=ifelse(str_detect(max.sent, "NA"), NA, max.sent),

   ## Min/Max Sentence length group (agg.min.sent.group, agg.max.sent.group)
   agg.min.sent.yr=round(agg.min.sent/365.25,1),
   agg.max.sent.yr=round(agg.max.sent/365.25,1),
   agg.min.sent.group=ifelse(agg.min.sent.yr<3, "Less than 3yrs",
                      ifelse(agg.min.sent.yr>=3 & agg.min.sent.yr<5, "3-4yrs",
                      ifelse(agg.min.sent.yr>=5 & agg.min.sent.yr<10, "5-9yrs",
                      ifelse(agg.min.sent.yr>=10 & agg.min.sent.yr<15, "10-14yrs",
                      ifelse(agg.min.sent.yr>=15 & agg.min.sent.yr<20, "15-19yrs",
                      ifelse(agg.min.sent.yr>=30 & agg.min.sent.yr<100, "20+yrs(non-Life)", NA)))))),
   agg.min.sent.group=ifelse(min.sent=="LIFE", "Life", agg.min.sent.group),
   agg.min.sent.group=factor(agg.min.sent.group,
	                     levels=c("Less than 3yrs","3-4yrs","5-9yrs","10-14yrs","15-19yrs",
	  			      "20+yrs(non-Life)", "Life")),
   agg.max.sent.group=ifelse(agg.max.sent.yr>=1 & agg.max.sent.yr<3, "Less than 3yrs",
                      ifelse(agg.max.sent.yr>=3 & agg.max.sent.yr<5, "3-4yrs",
                      ifelse(agg.max.sent.yr>=5 & agg.max.sent.yr<10, "5-9yrs",
                      ifelse(agg.max.sent.yr>=10 & agg.max.sent.yr<15, "10-14yrs",
                      ifelse(agg.max.sent.yr>=15 & agg.max.sent.yr<20, "15-19yrs",
                      ifelse(agg.max.sent.yr>=30 & agg.max.sent.yr<100, "30+yrs(non-Life)", NA)))))),
   agg.max.sent.group=ifelse(max.sent=="LIFE", "Life", agg.max.sent.group),
   agg.max.sent.group=factor(agg.max.sent.group,
	                     levels=c("Less than 3yrs","3-4yrs","5-9yrs","10-14yrs","15-19yrs",
	  			      "20+yrs(non-Life)", "Life")),

   # Sentence Date (sent.date)
   sent.date=ifelse(admType=="NEW COMMITMENT" & str_detect(aggMaxSent, "LIFE")==FALSE,
                    as.Date(maxExpDate, format="%m/%d/%Y")-agg.max.sent,  ## maximum expiration date-maximum sentence length
             ifelse(admType=="NEW COMMITMENT" & str_detect(aggMaxSent, "LIFE")==TRUE,
	            as.Date(parEligDate, format="%m/%d/%Y")-agg.min.sent, ## parole eligibility date-minimum sentence length
		    as.Date(origDateRec, format="%m/%d/%Y"))),
   sent.date=ifelse(admType=="NEW COMMITMENT" & is.na(sent.date),
                    as.Date(origDateRec, format="%m/%d/%Y"), sent.date),
   sent.date=as.Date(sent.date, format="%Y-%m-%d"),

   # Crime Date (crime.date)
   crime.date=ifelse(!is.na(sent.date),
                     as.Date(sent.date, format="%Y-%m-%d")-180,
                             NA), ## ASSUME 6 months between crime-sentence
   crime.date=as.Date(crime.date, format="%Y-%m-%d"),

   # Age of Crime (age.crime, age.crime.group)
   age.crime=round(as.numeric((crime.date-DOB))/365.25,1),
   age.crime.group=ifelse(age.crime<18, "Under 18",
                   ifelse(age.crime>=18 & age.crime<21, "age18-20",
		   ifelse(age.crime>=21 & age.crime<25, "age21-24",
		   ifelse(age.crime>=25 & age.crime<30, "age25-29",
		   ifelse(age.crime>=30 & age.crime<35, "age30-34",
		   ifelse(age.crime>=35 & age.crime<40, "age35-39",
		   ifelse(age.crime>=40 & age.crime<45, "age40-44",
		   ifelse(age.crime>=45 & age.crime<50, "age45-49",
		   ifelse(age.crime>=50 & age.crime<55, "age50-54",
		   ifelse(age.crime>=55 & age.crime<60, "age55-59",
		   ifelse(age.crime>=60, "60 or over", NA))))))))))),
   age.crime.group=factor(age.crime.group,
                          levels=c("Under 18", "age18-20", "age21-24", "age25-29",
				   "age30-34", "age35-39", "age40-44", "age45-49",
				   "age50-54", "age55-59", "60 or over"))
)

# Years Served (yrs.served, years.served.group)
# Proportion of min.max sentence served (prop.min.served, prop.max.served,
# prop.min.served.group, prop.max.served.group)

doccs <- doccs %>%
   mutate(

   ## Years served
   yrs.served=round(as.numeric(as.Date("2020-02-14", format="%Y-%m-%d")-sent.date)/365.25,1),
   yrs.served.group=ifelse(yrs.served>0 &  yrs.served<1, "Less than 3yrs",
		    ifelse(yrs.served>=3 &  yrs.served<5, "3-4yrs",
		    ifelse(yrs.served>=5 &  yrs.served<10, "5-9yrs",
		    ifelse(yrs.served>=10 &  yrs.served<15, "10-14yrs",
		    ifelse(yrs.served>=15 &  yrs.served<20, "15-19yrs",
		    ifelse(yrs.served>=30 , "20+yrs", NA)))))),
   yrs.served.group=factor(yrs.served.group,
                           levels=c("Less than 3yrs","3-4yrs","5-9yrs","10-14yrs","15-19yrs",
	  			      "20+yrs")),

   ## proportion of sentence served (prop.min.served.min, prop.max.served)
   prop.min.served=round(yrs.served/agg.min.sent.yr,2),
   prop.max.served=round(yrs.served/agg.max.sent.yr,2),

   ## proportion of sentence served (prop.min.served.group, prop.max.sent.group)
   prop.min.served.group=ifelse(agg.min.sent==0, NA,
                         ifelse(prop.min.served>=0 & prop.min.served<.25, "0-24.9%",
                         ifelse(prop.min.served>=.25 & prop.min.served<.5, "25-49.9%",
                         ifelse(prop.min.served>=.5 & prop.min.served<.75, "50-74.9%",
                         ifelse(prop.min.served>=.75 & prop.min.served<1, "75-99.9%",
                         ifelse(prop.min.served>=1, "100+", NA)))))),
   prop.min.served.group=factor(prop.min.served.group,
                                levels=c("0-24.9%", "25-49.9%", "50-74.9%", "75-99.9%", "100+")),

   prop.max.served.group=ifelse(agg.max.sent==3652704, NA,
                         ifelse(prop.max.served>=0 & prop.max.served<.25, "0-24.9%",
                         ifelse(prop.max.served>=.25 & prop.max.served<.5, "25-49.9%",
                         ifelse(prop.max.served>=.5 & prop.max.served<.75, "50-74.9%",
                         ifelse(prop.max.served>=.75 & prop.max.served<1, "75-99.9%",
                         ifelse(prop.max.served>=1, "100+", NA)))))),
   prop.max.served.group=factor(prop.max.served.group,
                                levels=c("0-24.9%", "25-49.9%", "50-74.9%", "75-99.9%", "100+")))


# SENTENCE TYPE in Detail (sent.type.detail)
# : Parole Violation, LWOP, Indeterminate-LIFE, Determinate-No Min, Detereminate-6/7 Max
#   Indeterminate-Not LIFE

## only for New Commitments (New Commitment)
## aggregate minimum sentence is life (365704) - LWOP
## aggregate maximum sentence is life (365704) - Indeterminate-Life
## zero aggregate minimum sentence - Determinate-No Min
## 6/7 maximum = Minimum - Determinate-6/7 Max
## If none of the above - Indeterminate-Not LIFE

## SENTENCE TYPE (sent.type)
# Parole Violation, LOWP, Indeterminate-Life,Determinate, Indeterminate-Not LIFE

## Combine "Determinate-No min" and "Determinate-6/7 Max"

# SENTENCE TYPE2 (sent.type2)
# : Parole Violation, LWOP, Indeterminate-LIFE, Indeterminate-Not LIFE, Detereminate

## SENTENCE TYPE (sent.type2)
## If original admission date is different from current admission year, parole violation
## If min sentence is life, life without parole
## If parole eligibility date exist + LIFE as maximum sentence, Indeterminate(w LIFE)
## If parole eligibility date exists, Indeterminate
## If none of the above and either conditional or max date exist, determinate


doccs <- doccs %>%
   mutate(

   ## Sentence Type in Detail
   sent.type.detail=ifelse(adm.type!="New Commitment", NA,
             ifelse(str_detect(aggMinSent, "LIFE"), "LWOP",
             ifelse(str_detect(aggMaxSent, "LIFE"), "Indeterminate-LIFE",
	     ifelse(agg.min.sent==0 , "Determinate-No Min",
             ifelse(agg.min.sent-5>round(agg.max.sent*6/7) & round(agg.max.sent*6/7)<agg.max.sent+5, "Determinate-6/7 Max",
             "Indeterminate-Not LIFE"))))),

   ## Sentence Type
   sent.type=ifelse(str_detect(sent.type.detail, "^Determinate"),
                     "Determinate", sent.type.detail),

   ## Sentence Type 2
   sent.type2=ifelse(!is.na(orig.adm.date) & orig.adm.date!=curr.adm.date, "Parole Violation",
              ifelse(str_detect(aggMinSent, "LIFE"), "LWOP",
              ifelse(!is.na(par.elig.date) & str_detect(aggMaxSent, "LIFE"), "Indeterminate-LIFE",
	      ifelse(!is.na(par.elig.date), "Indeterminate-Not LIFE",
	      ifelse(!is.na(cond.rel.date) | !is.na(max.exp.date), "Determinate",
	      NA))))))

## Years Before Parole Eligibility (yrs.to.par.elig, yrs.to.par.elig.group)
## Days Before Conditional Release date (yrs.to.cond.rel, yrs.to.cond.rel.group)

doccs <- doccs %>%
   mutate(

   yrs.to.par.elig= round(as.numeric(par.elig.date-as.Date("2020-02-14", format="%Y-%m-%d"))/365.25,2),
   yrs.to.cond.rel= round(as.numeric(cond.rel.date-as.Date("2020-02-14", format="%Y-%m-%d"))/365.25,2),

   yrs.to.par.elig.group =ifelse(yrs.to.par.elig<=0, "Passed parole eligible date",
                             ifelse(yrs.to.par.elig>0 & yrs.to.par.elig<1, "less than 1 year",
			     ifelse(yrs.to.par.elig>=1 & yrs.to.par.elig<5, "1-4 years",
			     ifelse(yrs.to.par.elig>=5 & yrs.to.par.elig<10, "5-9 years",
			     ifelse(yrs.to.par.elig>=10 & yrs.to.par.elig<14, "10-14 years",
			     ifelse(yrs.to.par.elig>=15, "15+ years", NA)))))),

   yrs.to.par.elig.group=factor(yrs.to.par.elig.group,
                                   levels=c("Passed parole eligible date",
				            "less than 1 year",
				            "1-4 years", "5-9 years",
					    "10-14 years", "15+ years")),

   yrs.to.cond.rel.group =ifelse(yrs.to.cond.rel<=0, "Passed conditional release date",
                          ifelse(yrs.to.cond.rel>0 & yrs.to.cond.rel<1, "less than 1 year",
			  ifelse(yrs.to.cond.rel>=1 & yrs.to.cond.rel<5, "1-4 years",
			  ifelse(yrs.to.cond.rel>=5 & yrs.to.cond.rel<10, "5-9 years",
			  ifelse(yrs.to.cond.rel>=10 & yrs.to.cond.rel<14, "10-14 years",
			  ifelse(yrs.to.cond.rel>=15, "15+ years", NA)))))),

   yrs.to.cond.rel.group=factor(yrs.to.cond.rel.group,
                                   levels=c("Passed conditional release date",
				            "less than 1 year",
					    "1-4 years", "5-9 years",
					    "10-14 years", "15+ years")))

# Number of charges
doccs <- doccs %>% mutate(tmp1=ifelse(!is.na(charge1),1, 0),
                          tmp2=ifelse(!is.na(charge2),1, 0),
			  tmp3=ifelse(!is.na(charge3),1, 0),
			  tmp4=ifelse(!is.na(charge4),1, 0),
			  ncharge=tmp1+tmp2+tmp3+tmp4) %>%
			  select(-c(tmp1, tmp2, tmp3, tmp4))

# Final Dataframe
vars <- c("id",
          "DIN"="din",
          "name",
          "sex",
	  "race.eth",
          "DOB",
          "county",
	  "NYC",
	  "crime.date",
	  "sent.date",
	  "orig.adm.date",
	  "curr.adm.date",
	  "earl.rel.date",
	  "earl.rel.type"="earRelType",
	  "par.hear.date",
	  "par.hear.type",
	  "par.elig.date",
	  "cond.rel.date",
	  "latest.rel.date",
          "latest.rel.type",
	  "max.exp.date",
	  "max.exp.par.sup.date",
	  "par.dis.date",
	  "custody.status",
	  "crime.type",
	  "adm.type",
	  "ncharge",
	  "charge1", "charge2", "charge3", "charge4",
	  "class1", "class2", "class3", "class4",
	  "age.current", "age.current.group",
	  "age.adm", "age.adm.group",
	  "age.crime", "age.crime.group",
	  "min.sent", "max.sent",
	  "agg.min.sent", "agg.max.sent",
	  "agg.min.sent.group", "agg.max.sent.group",
	  "yrs.served", "yrs.served.group",
	  "prop.min.served", "prop.max.served",
	  "prop.min.served.group", "prop.max.served.group",
	  "sent.type","sent.type.detail", "sent.type2",
	  "min.sent.yr", "min.sent.mo", "min.sent.day", "max.sent.yr", "max.sent.mo", "max.sent.day",
	  "yrs.to.par.elig", "yrs.to.par.elig.group",
	  "yrs.to.cond.rel", "yrs.to.cond.rel.group")

clean <- doccs %>%
  select(vars)

ds <- clean %>%
      dplyr::mutate(date.adm=curr.adm.date,
            date.age85=as.Date(DOB+85*365.25, format="%Y-%m-%d")) # date when age 85

#+end_src

* [Step 2] RETROACTIVE MODELING ------------------------------------------------------------
** Parole Reform
*** DONE Reform#1: No Admission for Technical Parole Violation (reform1)
#+begin_src R :session :results silent

# Reform#1: No Admission for Technical Parole Violation
# Identify those who were admitted for TPV between 2009-2016
# Create admission and release dates for an alternate scenario
r1a <- ds %>%
   mutate(
      p1.elig=ifelse(adm.type=="Parole/Cond.Rel Revoc",1,0),
      p1.elig.yr=ifelse(p1.elig==1 & year(date.adm)>=2009, year(date.adm), # Admission after 2009
                 ifelse(p1.elig==1 & year(date.adm)<2009, 2009, NA)), # Admission before 2009
      p1.date.adm=ifelse(p1.elig==1 & year(date.adm)>=2009, NA, date.adm),
      p1.date.rel=ifelse(p1.elig==1 & year(date.adm)>=2009, NA,
                  ifelse(p1.elig==1 & year(date.adm)<2009,
                         as.Date("2009-01-01", format="%Y-%m-%d"),
                         NA)),
      p1.date.adm=as.Date(p1.date.adm, format="%Y-%m-%d"),
      p1.date.rel=as.Date(p1.date.rel, format="%Y-%m-%d"))


reform1a <- r1a %>%
   select(id, p1.elig:p1.date.rel) %>%
   select(id, p1.elig, p1.elig.yr, p1.date.adm, p1.date.rel) %>%
   dplyr::rename(p1a.elig=p1.elig,
                 p1a.elig.yr=p1.elig.yr,
		 p1a.date.adm=p1.date.adm,
		 p1a.date.rel=p1.date.rel)

#+end_src

*** DONE Reform#2: Elderly parole release (reform2)
#+begin_src R :session :results silent

# Reform#2: Elderly parole release

## EXPLANATION OF ESTIMATING THE IMPACT OF ELDERLY PAROLE RELEASE

## IDENTIFY THOSE WHO WOULD 'BENEFIT' FROM THE REFORM
## APPLY DISTRIBUTION OF PAROLE RELEASE IN A SIMPLISTIC FORM
## LOOK AT THE DISTRIBUTION OF PAROLE RELEASE
##      - WHAT'S THE AVERAGE YEARS IT TAKES FOR INDIVIDUAL BEFORE RELEASE
## ESTIMATE PROJECTED RELEASE DATES BASED ON THE EXISTING PATTERNS
## EMPRICIAL EVIDENCE ON THE RELEASE RATE


# What does the distribution of release look like for those who served 15+ years ?  (rel.dist)
### For those who were on indeterminate sentence and were released,
### how long does it usually take before they are released?
### Those who were on indeterminate sentence AND
### were released to community (exclude death,transfer,other,etc) AND
### served 15 years or longer
### Exclude who were released before parole eligible date
### Also Exclude those who had parole eligible date before new date based on the policy
### since they are not relevant to the elderly parole release


## Scenario #1: Use the parole grant rate for those who went to parole board after serving 15 years for indeterminate sentence

# Identify those who meet the criteria each year:
## Age 55+ AND Served 15+ years AND not yet reached parole eligible date AND not yet released or

set.seed(4634)

prob<- as.vector(rel.dist[,2])
yrs <- as.vector(rel.dist[,1])

r2a <- ds %>%
   mutate(
      date.age55=as.Date(DOB+55*365), # date when age 55
      date.served15=as.Date(DOB+15*365), # date when served 15 yrs
      date.elig2=as.Date(ifelse(date.age55>date.served15, date.age55, date.served15)), # earlest date meeting both criteria
      p2.elig=ifelse(adm.type!="New Commitment", 0, # exclude anyone not serving a sentence on commitment crime
              ifelse(str_detect(sent.type, "Indeterminate")==FALSE, 0, # exclude if not indeterminate
              ifelse(date.elig2<par.elig.date, 1, 0))),  # available for earlier parole under this reform
      p2.elig.yr=ifelse(p2.elig==1 & year(date.elig2)<2009, 2009,
                 ifelse(p2.elig==1, year(date.elig2), NA)),
      date.elig2=ifelse(p2.elig==1 & year(date.elig2)<2009, ymd("2009-01-01"), date.elig2),
      date.elig2=as.Date(date.elig2, format="%Y-%m-%d"),
      p2.proj.yrs = ifelse(p2.elig==1 & p2.elig.yr<2020,
                           sample(yrs, size=n(), prob=prob, replace=TRUE), NA),
      p2.date.adm= date.adm,
      p2.date.rel= ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<cond.rel.date,
                          date.elig2+years(p2.proj.yrs),
                   ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<max.exp.date,
                          date.elig2+years(p2.proj.yrs),
		   ifelse(!is.na(cond.rel.date), cond.rel.date,
                   ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
      p2.date.rel= ifelse(p2.elig==1 & is.na(p2.date.rel), date.elig2+years(p2.proj.yrs), p2.date.rel),
      p2.date.rel=as.Date(p2.date.rel, format="%Y-%m-%d"))%>%
      mutate(p2.adm.yr=year(p2.date.adm),
             p2.rel.yr=year(p2.date.rel))

reform2a <- r2a %>%
      select(id, p2.elig, p2.elig.yr, p2.date.adm, p2.date.rel) %>%
      dplyr::rename(p2a.elig=p2.elig,
                    p2a.elig.yr=p2.elig.yr,
		    p2a.date.adm=p2.date.adm,
		    p2a.date.rel=p2.date.rel)


## Scenario #2: Use the overall parole grant rate for indeterminate (release rate doubled)
prob<- as.vector(rel.dist[,2])
yrs <- as.vector(rel.dist[,1])

prob <- prob*2
index <- which(cumsum(prob)>1)
prob[index[1:length(index)]]<-0
prob[index[1]] <- 1-sum(prob)

yrs<- yrs[1:length(prob)]

# Identify those who meet the criteria each year:
## Age 55+ AND Served 15+ years AND not yet reached parole eligible date AND not yet released or

## Random assignment of release rate
## Change projected release date with the maximum expiration date, if projected release date is later than maximum expiration date

set.seed(4634)

r2b <- ds %>%
   mutate(
      date.age55=as.Date(DOB+55*365), # date when age 55
      date.served15=as.Date(DOB+15*365), # date when served 15 yrs
      date.elig2=as.Date(ifelse(date.age55>date.served15, date.age55, date.served15)), # earlest date meeting both criteria
      p2.elig=ifelse(adm.type!="New Commitment", 0, # exclude anyone not serving a sentence on commitment crime
              ifelse(str_detect(sent.type, "Indeterminate")==FALSE, 0, # exclude if not indeterminate
              ifelse(date.elig2<par.elig.date, 1, 0))),  # available for earlier parole under this reform
      p2.elig.yr=ifelse(p2.elig==1 & year(date.elig2)<2009, 2009,
                 ifelse(p2.elig==1, year(date.elig2), NA)),
      date.elig2=ifelse(p2.elig==1 & year(date.elig2)<2009, ymd("2009-01-01"), date.elig2),
      date.elig2=as.Date(date.elig2, format="%Y-%m-%d"),
      p2.proj.yrs = ifelse(p2.elig==1 & p2.elig.yr<2020,
                           sample(yrs, size=n(), prob=prob, replace=TRUE), NA),
      p2.date.adm= date.adm,
      p2.date.rel= ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<cond.rel.date,
                          date.elig2+years(p2.proj.yrs),
                   ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<max.exp.date,
                          date.elig2+years(p2.proj.yrs),
		   ifelse(!is.na(cond.rel.date), cond.rel.date,
                   ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
      p2.date.rel= ifelse(p2.elig==1 & is.na(p2.date.rel), date.elig2+years(p2.proj.yrs), p2.date.rel),
      p2.date.rel=as.Date(p2.date.rel, format="%Y-%m-%d"))%>%
      mutate(p2.adm.yr=year(p2.date.adm),
             p2.rel.yr=year(p2.date.rel))

reform2b <- r2b %>%
      select(id, p2.elig, p2.elig.yr, p2.date.adm, p2.date.rel) %>%
      dplyr::rename(p2b.elig=p2.elig,
                    p2b.elig.yr=p2.elig.yr,
		    p2b.date.adm=p2.date.adm,
		    p2b.date.rel=p2.date.rel)

#+end_src

*** DONE Reform#3: Fair and Timely Parole (reform3) - Presumptive Release
#+begin_src R :session :results silent

## EXPLANATION OF ESTIMATING THE IMPACT OF PRESUMPTIVE RELEASE

## WHAT DOES PRESUMPTIVE RELEASE LOOK LIKE?
## START WITH THE MOST PROGRESSIVE REFORM

## Scenario #1:
## THE MOST PROGRESSIVE REFORM -- 100% RELEASE AT THE EARLIEST PAROLE DATE(Unrealistic)

r3a <- ds %>%
   mutate(
      date.elig3=ifelse(adm.type=="New Commitment" & str_detect(sent.type, "Indeterminate"), par.elig.date, NA),
      date.elig3= as.Date(date.elig3, format="%Y-%m-%d"),
      p3.elig=ifelse(adm.type!="New Commitment", 0, # Exclude anyone not serving a sentence
              ifelse(str_detect(sent.type, "Indeterminate") & !is.na(date.elig3), 1,
              0)),
      p3.elig.yr=ifelse(p3.elig==1 & year(date.elig3)>=2009, year(date.elig3),
                 ifelse(p3.elig==1 & year(date.elig3)<2009, 2009, NA)),
      date.elig3=ifelse(p3.elig==1 & year(date.elig3)<2009, as.Date("2009-01-01", format="%Y-%m-%d"),
                        date.elig3),
      date.elig3=as.Date(date.elig3, format="%Y-%m-%d"),
      p3.date.adm=date.adm,
      p3.date.rel=ifelse(p3.elig==1, date.elig3,
                  ifelse(p3.elig==1 & date.elig3>cond.rel.date & !is.na(cond.rel.date),
                         cond.rel.date,
                  ifelse(!is.na(cond.rel.date), cond.rel.date,
                  ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
      p3.date.rel=as.Date(p3.date.rel, format="%Y-%m-%d")) %>%
      mutate(p3.rel.yr=year(p3.date.rel))


reform3a <- r3a %>%
      select(id, p3.elig, p3.elig.yr, p3.date.adm, p3.date.rel) %>%
      dplyr::rename(p3a.elig=p3.elig,
                    p3a.elig.yr=p3.elig.yr,
		    p3a.date.adm=p3.date.adm,
		    p3a.date.rel=p3.date.rel)

## Scenario #2:
## 70% RELEASE AT THE EARLIEST PAROLE DATE
## Assumption about release year distribution

prob <- c(0.4, 0.2, 0.1, 0.3)
yrs <- c(0, 2, 4, 90) ## 90 means no release under this reform

r3b <- ds %>%
   mutate(
      date.elig3=ifelse(adm.type=="New Commitment" & str_detect(sent.type, "Indeterminate"), par.elig.date, NA),
      date.elig3= as.Date(date.elig3, format="%Y-%m-%d"),
      p3.elig=ifelse(adm.type!="New Commitment", 0, # Exclude anyone not serving a sentence
              ifelse(str_detect(sent.type, "Indeterminate") & !is.na(date.elig3), 1,
              0)),
      p3.elig.yr=ifelse(p3.elig==1 & year(date.elig3)>=2009, year(date.elig3),
                 ifelse(p3.elig==1 & year(date.elig3)<2009, 2009, NA)),
      date.elig3=ifelse(p3.elig==1 & year(date.elig3)<2009, as.Date("2009-01-01", format="%Y-%m-%d"),
                        date.elig3),
      date.elig3=as.Date(date.elig3, format="%Y-%m-%d"),
      p3.proj.yrs = ifelse(p3.elig==1 & p3.elig.yr<2020,
                           sample(yrs, size=n(), prob=prob, replace=TRUE),
	            ifelse(p3.elig==1 & p3.elig.yr>=2020,
                           sample(yrs, size=n(), prob=prob, replace=TRUE), NA)),
      p3.date.adm=date.adm,
      p3.date.rel= ifelse(p3.elig==1 & date.elig3+years(p3.proj.yrs)<cond.rel.date,
                          date.elig3+years(p3.proj.yrs),
                   ifelse(p3.elig==1 & date.elig3+years(p3.proj.yrs)<max.exp.date,
                          date.elig3+years(p3.proj.yrs),
		   ifelse(!is.na(cond.rel.date), cond.rel.date,
                   ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
      p3.date.rel= ifelse(p3.elig==1 & is.na(p3.date.rel), date.elig3+years(p3.proj.yrs), p3.date.rel),
      p3.date.rel=as.Date(p3.date.rel, format="%Y-%m-%d")) %>%
      mutate(p3.rel.yr=year(p3.date.rel))

reform3b <- r3b %>%
      select(id, p3.elig, p3.elig.yr, p3.date.adm, p3.date.rel) %>%
      dplyr::rename(p3b.elig=p3.elig,
                    p3b.elig.yr=p3.elig.yr,
		    p3b.date.adm=p3.date.adm,
		    p3b.date.rel=p3.date.rel)

#+end_src

*** DONE Reform#4: Second Look Bill (reform4)
#+begin_src R :session :results silent

# What does the distribution of release look like for those who would befefit from this law?
## Pure assumptions about release distribution (need to consult with the team)
## 20% release at the first application; 10% release at the second application(3yrs); 5% release at the third application(6years)
## 65% never released under thie law

prob <- c(0.1, 0.05, 0.05, 0.8)
yrs <- c(0, 3, 6, 90) ## 90 means no release under this reform

## Scenario #1 Brooklyn DA's Office Suggestion

# Identify those who meet the criteria:
## A Felony Conviction: Served 20+ years AND not yet reached parole eligible date AND not yet released
## Other Felony Conviction: Served 15+ years AND not yet reached parole eligible date AND not yet released
## Random assignment of resentencing rate (need some estimation about the distribution of release)
## If projected release date is after maximum expiration date, choose maximum expiration date

set.seed(4634)

r4a <- ds %>%
   mutate(
      date.served15=as.Date(sent.date+15*365, format="%Y-%m-%d"), # date when served 15 yrs
      date.served20=as.Date(sent.date+20*365, format="%Y-%m-%d"), # date when served 20 yrs
      date.elig4=as.Date(ifelse(str_detect(class1, "A"), date.served20,
                         ifelse(class1 %in% c("B", "C", "D", "E"), date.served15, NA))), # earlest date meeting criteria
      date.elig4=as.Date(date.elig4, format="%Y-%m-%d"),
      p4.elig=ifelse(adm.type!="New Commitment", 0,
              ifelse(!is.na(date.elig4), 1, 0)),
      p4.elig.yr=ifelse(p4.elig==1 & year(date.elig4)<2009, 2009,
                 ifelse(p4.elig==1, year(date.elig4), NA)),
      date.elig4=ifelse(p4.elig==1 & year(date.elig4)<2009, as.Date("2009-01-01", format="%Y-%m-%d"),
                        date.elig4),
      p4.proj.yrs=ifelse(p4.elig==1 & p4.elig.yr<2020,
                         sample(yrs, size=n(), prob=prob, replace=TRUE),
                  ifelse(p4.elig==1 & p4.elig.yr>=2020,
		         sample(yrs, size=n(), prob=prob, replace=TRUE),NA)),
      p4.date.adm=date.adm,
      p4.date.rel=ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< cond.rel.date,
                                 date.elig4+years(p4.proj.yrs),
                  ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< max.exp.date,
                         date.elig4+years(p4.proj.yrs),
	          ifelse(!is.na(cond.rel.date), cond.rel.date,
                  ifelse(!is.na(max.exp.date), max.exp.date, date.age85)))),
     p4.date.rel=ifelse(p4.elig==1 & is.na(p4.date.rel), date.elig4+years(p4.proj.yrs),
                        p4.date.rel),
      p4.date.rel=as.Date(p4.date.rel, format="%Y-%m-%d")) %>%
   mutate(p4.date.rel.type=ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< cond.rel.date,
                                 "(cond)date.elig4+years(p4.proj.yrs)",
                  ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< max.exp.date,
                         "(max)date.elig4+years(p4.proj.yrs)",
	          ifelse(!is.na(cond.rel.date), "cond.rel.date",
                  ifelse(!is.na(max.exp.date), "max.exp.date", "date.age85")))),
         p4.date.rel.type=ifelse(p4.elig==1 & is.na(p4.date.rel.type),
                         "date.elig4+years(p4.proj.yrs)",
                        p4.date.rel.type))

reform4a <- r4a %>%
   select(id, p4.elig, p4.elig.yr, p4.date.adm, p4.date.rel) %>%
   dplyr::rename(p4a.elig=p4.elig,
                 p4a.elig.yr=p4.elig.yr,
		 p4a.date.adm=p4.date.adm,
		 p4a.date.rel=p4.date.rel)

## Scenario #2 Senate/Assembly bill
## People sentenced longer than 10 years of maximum sentence AND
## Served 1/3 of maximum sentence AND
## Not serving a sentece for list charges (e.g. 125, 130, 263, money laundering to support terrorism)
## Have 2 more years before eligible for conditional release
## Eligible for reapplication every three years

set.seed(4634)

prob <- c(0.1, 0.05, 0.05, 0.8)
yrs <- c(0, 3, 6, 90) ## 90 means no release under this reform


# Create Charge Exclusion List
pl125 <- unique(ds$charge1[which(str_detect(ds$charge1, "(HOMICIDE|MANSLAUGH|MURDER)"))])
money.laundering.terror <-
   unique(ds$charge1[str_detect(ds$charge1, "MONEY") & str_detect(ds$charge1, "TERROR")])
pl130 <- unique(ds$charge1[which(str_detect(ds$charge1, "(SEXUAL|RAPE)"))])

pl263 <- unique(ds$charge1[which(str_detect(ds$charge1, "CHILD") &
                                 str_detect(ds$charge1, "SEX"))])

exclusion.list <- c(pl125, pl130, pl263, money.laundering.terror)

r4b <- ds %>%
   mutate(
     sent10plus=ifelse(max.sent.yr>=10, 1,0),    # Sentenced longer than 10 years
     date.served.third=as.Date(sent.date+days(round(agg.max.sent/3)), format="%Y-%d-%d"), # date when served 1/3 max sentence
     p4.elig=ifelse(adm.type!="New Commitment", 0, # Exclude anyone not serving a sentence
             ifelse(charge1 %in% exclusion.list, 0, # Charge Exclusion
	     ifelse(date.served.third<cond.rel.date-years(2), 1,
	     ifelse(is.na(cond.rel.date) & date.served.third<max.exp.date-years(2),1,
                    0)))),
     date.elig4=ifelse(p4.elig==1, date.served.third, NA),
     date.elig4=as.Date(date.elig4, format="%Y-%m-%d"),
     p4.elig.yr=ifelse(p4.elig==1 & year(date.elig4)<2009, 2009,
                ifelse(p4.elig==1, year(date.elig4), NA)),
     date.elig4=ifelse(p4.elig==1 & year(date.elig4)<2009, as.Date("2009-01-01", format="%Y-%m-%d"),
                       date.elig4),
     p4.proj.yrs=ifelse(p4.elig==1 & p4.elig.yr<2020,
                        sample(yrs, size=n(), prob=prob, replace=TRUE),
                 ifelse(p4.elig==1 & p4.elig.yr>=2020,
          	        sample(yrs, size=n(), prob=prob, replace=TRUE),NA)),
     p4.date.adm=date.adm,
     p4.date.rel=ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< cond.rel.date,
                        date.elig4+years(p4.proj.yrs),
                 ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< max.exp.date,
                        date.elig4+years(p4.proj.yrs),
                 ifelse(!is.na(cond.rel.date), cond.rel.date,
                 ifelse(!is.na(max.exp.date), max.exp.date, date.age85)))),
     p4.date.rel=ifelse(p4.elig==1 & is.na(p4.date.rel), date.elig4+years(p4.proj.yrs),
                        p4.date.rel),
     p4.date.rel=as.Date(p4.date.rel, format="%Y-%m-%d")) %>%
   mutate(
      p4.date.rel.type=ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< cond.rel.date,
                              "(cond)date.elig4+years(p4.proj.yrs)",
                       ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< max.exp.date,
                              "(max)date.elig4+years(p4.proj.yrs)",
	               ifelse(!is.na(cond.rel.date), "cond.rel.date",
                       ifelse(!is.na(max.exp.date), "max.exp.date", "age85")))),
      p4.date.rel.type=ifelse(p4.elig==1 & is.na(p4.date.rel.type),
                              "(missing)date.elig4+years(p4.proj.yrs)", p4.date.rel.type))

reform4b <- r4b %>%
   select(id, p4.elig, p4.elig.yr, p4.date.adm, p4.date.rel) %>%
   dplyr::rename(p4b.elig=p4.elig,
                 p4b.elig.yr=p4.elig.yr,
		 p4b.date.adm=p4.date.adm,
		 p4b.date.rel=p4.date.rel)


## Scenario #3 West Virginia
## People sentenced longer than 10 years of maximum sentence AND served 10+ years
## Eligible for reapplication after 5 years; then every 2 years until exhausting the sentencing modification process
# Presumption of release for those who are 50 years or older

set.seed(4634)

prob <- c(0.1, 0.05, 0.05, 0.8)
yrs <- c(0, 5, 7, 90) ## 90 means no release under this reform


# Create Charge Exclusion List
r4c <- ds %>%
   mutate(
     date.age50=as.Date(DOB+50*365.25), # date when age 50
     sent10plus=ifelse(max.sent.yr>=10, 1,0),    # Sentenced longer than 10 years
     date.served.10yrs=as.Date(sent.date+years(10), format="%Y-%d-%d"), # date when served 10 years in prison
     p4.elig=ifelse(adm.type!="New Commitment", 0, # Exclude anyone not serving a sentence
	     ifelse(sent10plus==1 & date.served.10yrs <cond.rel.date, 1, # sentenced 10+ yrs AND served 10+ yrs
	     ifelse(sent10plus==1 & date.served.10yrs <max.exp.date, 1,
                    0))),
     date.elig4=ifelse(p4.elig==1, date.served.10yrs, NA),
     date.elig4=as.Date(date.elig4, format="%Y-%m-%d"),
     p4.elig.yr=ifelse(p4.elig==1 & year(date.elig4)<2009, 2009,
                ifelse(p4.elig==1, year(date.elig4), NA)),
     date.elig4=ifelse(p4.elig==1 & year(date.elig4)<2009, as.Date("2009-01-01", format="%Y-%m-%d"),
                       date.elig4),
     p4.proj.yrs=ifelse(p4.elig==1 & p4.elig.yr<2020,
                        sample(yrs, size=n(), prob=prob, replace=TRUE),
                 ifelse(p4.elig==1 & p4.elig.yr>=2020,
          	        sample(yrs, size=n(), prob=prob, replace=TRUE),NA)),
     p4.date.adm=date.adm,
     p4.date.rel=ifelse(p4.elig==1 & date.elig4>date.age50, date.elig4,
                 ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)> date.age50,
                        date.elig4+years(p4.proj.yrs),
		 ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)<cond.rel.date,
		        date.elig4+years(p4.proj.yrs),
		 ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)<max.exp.date,
		        date.elig4+years(p4.proj.yrs),
                 ifelse(!is.na(cond.rel.date), cond.rel.date,
                 ifelse(!is.na(max.exp.date), max.exp.date, date.age85)))))),
     p4.date.rel=ifelse(p4.elig==1 & is.na(p4.date.rel), date.elig4+years(p4.proj.yrs), p4.date.rel),
     p4.date.rel=as.Date(p4.date.rel, format="%Y-%m-%d"),
     p4.date.rel.type=ifelse(p4.elig==1 & date.elig4>date.age50, "(age50)date.elig4",
                      ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)> date.age50,
                             "(age50)date.elig4+years(p4.proj.yrs)",
		      ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)<cond.rel.date,
		             "(cond)date.elig4+years(p4.proj.yrs)",
		      ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)<max.exp.date,
		             "(max)date.elig4+years(p4.proj.yrs)",
                      ifelse(!is.na(cond.rel.date), "cond.rel.date",
                      ifelse(!is.na(max.exp.date), "max.exp.date", "date.age85")))))),
     p4.date.rel.type=ifelse(p4.elig==1 & is.na(p4.date.rel.type), "(missing)date.elig4+years(p4.proj.yrs)", p4.date.rel.type))

reform4c <- r4c %>%
     select(id, p4.elig, p4.elig.yr, p4.date.adm, p4.date.rel) %>%
     dplyr::rename(p4c.elig=p4.elig,
                   p4c.elig.yr=p4.elig.yr,
   		   p4c.date.adm=p4.date.adm,
		   p4c.date.rel=p4.date.rel)

#+end_src

*** DONE Reform#5: Youth Parole (reform5)
#+begin_src R :session :results silent

# What does the distribution of release look like for those who served 15+ years ?  (rel.dist)
### For those who were on indeterminate sentence and were released,
### how long does it usually take before they are released?
### Those who were on indeterminate sentence AND
### were released to community (exclude death,transfer,other,etc) AND
### served 15 years or longer
### Exclude who were released before parole eligible date
### Also Exclude those who had parole eligible date before new date based on the policy
### since they are not relevant to the elderly parole release

## Scenario #1: Use the overall parole grant rate for those who went to parole board after serving 15 years in prison

prob<- as.vector(rel.dist[,2])
yrs <- as.vector(rel.dist[,1])

## Committed Crime Age Age Under 21
## Served 15+ Years
## No distinction by crime type
## If projected release date is later than the conditional release date, choose conditional release date
## If projected release date is later than the maximum expiration date, choose maximum expiration date

set.seed(435872)

r5a <- ds %>%
   mutate(
      date.elig5=as.Date(sent.date+15*365), # date when served 15 yrs; date eligible for parole
      youth=ifelse(age.crime<21, 1, 0),
      p5.elig=ifelse(adm.type!="New Commitment", 0,
                ifelse(youth==1 & date.elig5<par.elig.date,1, 0)), # sentenced under age21 and eligible before parole eligiblity date
      p5.elig.yr=ifelse(p5.elig==1 & year(date.elig5)<2009, 2009,
                 ifelse(p5.elig==1, year(date.elig5), NA)),
      date.elig5=ifelse(p5.elig==1 & year(date.elig5)<2009, as.Date("2009-01-01", format="%Y-%m-%d"),
                        date.elig5),
      date.elig5=as.Date(date.elig5, format="%Y-%m-%d"),
      p5.proj.yrs = ifelse(p5.elig==1 & p5.elig.yr<2020,
                           sample(yrs, size=n(), prob=prob, replace=TRUE), # Random assignment of release rate
			   NA),
      p5.date.adm = date.adm,
      p5.date.rel= ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<cond.rel.date,
                          date.elig5+years(p5.proj.yrs),
                   ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<max.exp.date,
                          date.elig5+years(p5.proj.yrs),
	           ifelse(!is.na(cond.rel.date), cond.rel.date,
                   ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
      p5.date.rel=as.Date(p5.date.rel, format="%Y-%m-%d"),
      p5.date.rel.type= ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<cond.rel.date,
                              "date.elig5+years(p5.proj.yrs)",
                   ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<max.exp.date,
                          "date.elig5+years(p5.proj.yrs)",
	           ifelse(!is.na(cond.rel.date), "cond.rel.date",
                   ifelse(!is.na(max.exp.date), "max.exp.date", NA)))))


reform5a <- r5a  %>%
   select(id, p5.elig, p5.elig.yr, p5.date.adm, p5.date.rel) %>%
   dplyr::rename(p5a.elig=p5.elig,
                 p5a.elig.yr=p5.elig.yr,
		 p5a.date.adm=p5.date.adm,
		 p5a.date.rel=p5.date.rel)


## Scenario #1 (Illinois)
### Crime committed under 21 years AND
### Served 10+ years
### Charges EXCEPT aggravated criminal sexual assault, predatory criminal sexual assault of a child
### First-degree murder: eligible for parole after serving 20+ years, except a term of natura life imprisonment


## Use the overall parole grant rate for those who went to parole board after serving 15 years in prison

prob<- as.vector(rel.dist[,2])
yrs <- as.vector(rel.dist[,1])

# Create Charge Exclusion List

agg.sex <- unique(ds$charge1[which(str_detect(ds$charge1, "AGG") & str_detect(ds$charge1, "SEX"))])

pred.sex.child<- unique(ds$charge1[which(str_detect(ds$charge1, "CHILD") & str_detect(ds$charge1, "SEX") &
                        str_detect(ds$charge1, "PRED"))])

exclusion.list <- c(agg.sex, pred.sex.child)

murder1 <- unique(ds$charge1[which(str_detect(ds$charge1, "MURDER") & str_detect(ds$charge1, "1ST"))])


set.seed(435872)

r5b <- ds %>%
   mutate(
      date.elig5=ifelse(charge1 %in% exclusion.list, NA,  # Not eligible for youth parole
                ifelse(charge1 %in% murder1, as.Date(sent.date+20*365.25, format="%Y-%m-%d"), # date when served 20 years for murder 1st degree
                       as.Date(sent.date+10*365.25, format="%Y-%m-%d"))), # date when served 10 yrs for all other charge
      date.elig5=as.Date(date.elig5, format="%Y-%m-%d"),
      youth=ifelse(age.crime<21, 1, 0),
      p5.elig=ifelse(adm.type!="New Commitment", 0,
              ifelse(sent.type=="LWOP", 0,
              ifelse(youth==1 & !is.na(date.elig5) & date.elig5< par.elig.date, 1, 0))),
      p5.elig.yr=ifelse(p5.elig==1 & year(date.elig5)<2009, 2009,
                 ifelse(p5.elig==1, year(date.elig5), NA)),
      date.elig5=ifelse(p5.elig==1 & year(date.elig5)<2009, as.Date("2009-01-01", format="%Y-%m-%d"),
                        date.elig5),
      date.elig5=as.Date(date.elig5, format="%Y-%m-%d"),
      p5.proj.yrs = ifelse(p5.elig==1 & p5.elig.yr<2020,
                           sample(yrs, size=n(), prob=prob, replace=TRUE), # Random assignment of release rate
	            ifelse(p5.elig==1 & p5.elig.yr>2020,
		           sample(yrs, size=n(), prob=prob, replace=TRUE),
			   NA)),
      p5.date.adm = date.adm,
      p5.date.rel= ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<cond.rel.date,
                          date.elig5+years(p5.proj.yrs),
                   ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<max.exp.date,
                          date.elig5+years(p5.proj.yrs),
	           ifelse(p5.elig==1, date.elig5+years(p5.proj.yrs),
	           ifelse(!is.na(cond.rel.date), cond.rel.date,
                   ifelse(!is.na(max.exp.date), max.exp.date, NA))))),
      p5.date.rel= ifelse(p5.elig==1 & is.na(p5.date.rel), date.elig5+years(p5.proj.yrs),
                           p5.date.rel),
      p5.date.rel=as.Date(p5.date.rel, format="%Y-%m-%d"),
      p5.date.rel.type= ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<cond.rel.date,
                          "(cond)date.elig5+years(p5.proj.yrs)",
                   ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<max.exp.date,
                          "(max)date.elig5+years(p5.proj.yrs)",
	           ifelse(p5.elig==1, "date.elig5+years(p5.proj.yrs)",
	           ifelse(!is.na(cond.rel.date), "cond.rel.date",
                   ifelse(!is.na(max.exp.date), "max.exp.date", NA))))),
      p5.date.rel.type= ifelse(p5.elig==1 & is.na(p5.date.rel.type), "(add)date.elig5+years(p5.proj.yrs)",
                           p5.date.rel.type))

reform5b <- r5b %>%
      select(id, p5.elig, p5.elig.yr, p5.date.adm, p5.date.rel) %>%
      dplyr::rename(p5b.elig=p5.elig,
                    p5b.elig.yr=p5.elig.yr,
		    p5b.date.adm=p5.date.adm,
		    p5b.date.rel=p5.date.rel)

#+end_src

*** DONE Retroactive Sentencing Aggregate (Overall)
#+begin_src R :session :results silent

## Merge dataframes for policy reform scenarios
vars <- c("id", "sent.type", "adm.type", "sex", "race.eth", "NYC", "crime.type",
          "DOB", "date.adm", "par.elig.date", "cond.rel.date", "max.exp.date")

base <- ds %>% select(vars)

## Models to Include

models <- c("p1a", "p2a", "p2b", "p3a", "p3b", "p4a", "p4b", "p4c", "p5a", "p5b")

var.list <- paste0(models, ".elig")

reforms <- join_all(list(base,
                         reform1a,
			 reform2a, reform2b,
                         reform3a, reform3b,
                         reform4a, reform4b, reform4c,
			 reform5a, reform5b),
                    by="id", type="left") %>%
           mutate_at(var.list, ~replace(., is.na(.), 0))


### Combine All Policy Reforms

rel_list <- paste0(models, ".date.rel")
adm_list <- paste0(models, ".date.adm")
elig_list <-  paste0(models, ".elig")

elig_yr_list <- paste0(models, ".elig.yr")

sum.list <- paste0(models, ".elig")

reforms  <- reforms %>%
   mutate(npol=rowSums(.[,sum.list], na.rm=TRUE),
	  earl.elig=ifelse(npol>0, 1, 0),
	  earl.adm.date=ifelse(p1a.elig==1, NA, date.adm),
	  earl.adm.date=as.Date(earl.adm.date, format="%Y-%m-%d"),
	  earl.adm.pol=ifelse(is.na(p1a.date.adm), "p1a", "base"),
          na_count=apply(reforms[,rel_list], 1, function(x) sum(is.na(x))))

tmp1 <- reforms %>% filter(na_count<8) %>%
   mutate(earl.rel.date=ifelse(na_count==8, NA,
                               apply(.[,rel_list], 1, min, na.rm=TRUE)))

tmp2 <- reforms %>% filter(na_count==8) %>%
   mutate(earl.rel.date=NA)

reforms2 <- rbind(tmp1, tmp2)

test <- reforms2 %>%
   mutate(
      earl.rel.pol=ifelse(earl.adm.pol=="p1a", "p1a",
                   ifelse(earl.rel.date==p2a.date.rel, "p2a",
		   ifelse(earl.rel.date==p2b.date.rel, "p2b",
		   ifelse(earl.rel.date==p3a.date.rel, "p3a",
		   ifelse(earl.rel.date==p4a.date.rel, "p4a",
		   ifelse(earl.rel.date==p4b.date.rel, "p4b",
		   ifelse(earl.rel.date==p5a.date.rel, "p5a",
		   ifelse(earl.rel.date==p5b.date.rel, "p5b", NA)))))))),
      earl.elig.yr=apply(.[,elig_yr_list], 1, min, na.rm=TRUE),
      earl.elig.yr=ifelse(earl.elig==1, earl.elig.yr, NA)) %>%
   mutate(date.rel=NA)




# Acy ------------------------------------------------------------
# the number of admissions in each offense category by year

Acy_function <- function(df, date_var) {
  test <- df %>%
    mutate(x = year(df[,date_var])) %>%
    filter(x>=1995 & x <=2016) %>%
    group_by(year=x) %>%
    summarise(Acy=n()) %>% data.frame()

  return(test)
}

var_list <- c("date.adm", adm_list, "earl.adm.date")

for (i in 1:length(var_list)) {

   if (i==1) {
      As <- Acy_function(reforms, var_list[i])
      names(As) <- c("year", "base")
   }
   else {
      As <- merge(As, Acy_function(reforms, var_list[i]), by.x="year", by.y="year",
                  all.x=TRUE, all.y=TRUE)
      names(As) <- c(names(As)[1:ncol(As)-1], substr(var_list[i],1,3))
   }
}

print(As)


# Rcy ------------------------------------------------------------
# the number of releases in each offense category by year

Rcy_function <- function(df, date_var) {
  test <- df %>%
    mutate(x = year(df[,date_var])) %>%
    filter(x>=1995 & x <=2016) %>%
    group_by(year=x) %>%
    summarise(Rcy=n()) %>% data.frame()

  return(test)
}

var_list <- c("date.rel", rel_list, "earl.rel.date")

for (i in 1:length(var_list)) {

   if (i==1) {
      Rs <- Rcy_function(reforms, var_list[i])
      names(Rs) <- c("year", "base")
   }
   else {
      Rs <- merge(Rs, Rcy_function(reforms, var_list[i]), by.x="year", by.y="year",
                  all.x=TRUE, all.y=TRUE)
      names(Rs) <- c(names(Rs)[1:ncol(Rs)-1], substr(var_list[i],1,3))
   }
}

print(Rs)

# Ecy ------------------------------------------------------------
# Number of people eligible for each reform

Ecy_function <- function(df, elig_var) {

     yr <- paste0(elig_var, ".yr")
     agg <- df %>%
        mutate(year=df[,yr],
               Eligible=df[,elig_var]) %>%
        group_by(year) %>%
        summarise(Ecy=sum(Eligible, rm.na=TRUE)) %>% data.frame()

     return(agg)
 }

var_list <- c(elig_list, "earl.elig")

for (i in 1:length(var_list)) {

   if (i==1) {
      Es <- Ecy_function(reforms, var_list[i])
      names(Es) <- c("year", substr(var_list[i], 1,3))
   }
   else {

      Es <- merge(Es, Ecy_function(reforms, var_list[i]), by.x="year", by.y="year",
                  all.x=TRUE, all.y=TRUE)
      names(Es) <- c(names(Es)[1:ncol(Es)-1], substr(var_list[i], 1,3))
   }
}

print(Es)


# Ncy ------------------------------------------------------------
# Year-end population in Y year

# CREATE INCARCERATION STATUS DUMMY BY YEAR (END-OF-YEAR)

Ncy_function <- function(df, adm_date){


   if (adm_date=="date.adm") {
     date.adm <- adm_date
     date.rel <- paste0(substr(date.adm, 1, 5), "rel")
   }
   else if (adm_date=="earl.adm.date") {
     date.adm <- adm_date
     date.rel <- paste0(substr(date.adm, 1, 5), "rel.date")
   }
   else {
     date.adm <- adm_date
     date.rel <- paste0(substr(date.adm, 1, 9), "rel")
   }

   mylist <- list()

   for (i in 1995:2030) {

     VAR <- paste0("in", i)
     DATE1 <- paste0(i, "-02-14")

     x <- ifelse(df[,date.adm] <= as.Date(DATE1) &
                 (df[,date.rel] >= as.Date(DATE1) | is.na(df[,date.rel])), 1, 0)

     j <- i-1994
     mylist[[j]] <- x
   }

    InPrison <- data.frame(do.call("cbind", mylist))

    row.names(InPrison)<- NULL

    # NEW VAR NAME
    for (i in 1:36) {
       j <- i + 1994
       VAR <- paste0("in", j)
       names(InPrison)[i] <- VAR

    # Create a dataframe that has incarceration status and crime category
    InPrison2 <- cbind(InPrison, reforms$race.eth, reforms$sex, reforms$crime.type,
                       reforms$NYC, reforms$adm.type, stringsAsFactors=F)

    colnames(InPrison2)[37] <- "race"
    colnames(InPrison2)[38] <- "sex"
    colnames(InPrison2)[39] <- "crime.type"
    colnames(InPrison2)[40] <- "NYC"
    colnames(InPrison2)[41] <- "adm.type"
    }

    wide.temp <- InPrison2 %>%
            select(-c(race:adm.type)) %>%
	    summarise_all(funs(sum(., na.rm=TRUE))) %>%
	    mutate(Sample=ifelse(adm_date=="date.adm", "base", substr(adm_date, 1, 3))) %>% data.frame()

   return(wide.temp)

}

Ns <- data.frame()

var_list <- c("date.adm", adm_list, "earl.adm.date")

for (i in 1:length(var_list)) {

   Ns <-rbind(Ns, Ncy_function(reforms2, var_list[i]))

}

Ns



As
Rs
Es
Ns


   mylist <- list()

   for (i in 1995:2030) {

     VAR <- paste0("in", i)
     DATE1 <- paste0(i, "-12-31")

     x <- ifelse(reforms2[,"date.adm"] <= as.Date(DATE1) &
                (reforms2[,"date.rel"] >= as.Date(DATE1) | is.na(reforms2[,"date.rel"])), 1, 0)

     j <- i-1994
     mylist[[j]] <- x
   }

    InPrison <- data.frame(do.call("cbind", mylist))

    row.names(InPrison)<- NULL

    # NEW VAR NAME
    for (i in 1:36) {
       j <- i + 1994
       VAR <- paste0("in", j)
       names(InPrison)[i] <- VAR

    # Create a dataframe that has incarceration status and crime category
    InPrison2 <- cbind(InPrison, reforms$race.eth, reforms$sex, reforms$crime.type,
                       reforms$NYC, reforms$adm.type, stringsAsFactors=F)

    colnames(InPrison2)[37] <- "race"
    colnames(InPrison2)[38] <- "sex"
    colnames(InPrison2)[39] <- "crime.type"
    colnames(InPrison2)[40] <- "NYC"
    colnames(InPrison2)[41] <- "adm.type"
    }

    wide.temp <- InPrison2 %>%
            select(-c(race:adm.type)) %>%
	    summarise_all(funs(sum(., na.rm=TRUE)))


%>%
	    mutate(Sample=ifelse(adm_date=="date.adm", "base", substr(adm_date, 1, 3))) %>% data.frame()

   return(wide.temp)




saveRDS(As, "Data/doccs.As.rds")
saveRDS(Rs, "Data/doccs.Rs.rds")
saveRDS(Es, "Data/doccs.Es.rds")
saveRDS(Ns, "Data/doccs.Ns.rds")

#+end_src

* [Step 3] Projecting Future Population
#+begin_src R :session :results silent


## Projection of Overall Population
year <- seq(2010, 2020, by=1)
pop <- c(58378, 56315, 55979, 54865, 54141, 53103, 51744, 51466, 48932, 46244, 43555)


adm.total <- c(24374, 24116, 23738, 23317, 22516, 21483, 21675, NA, NA, NA, NA)
adm.new <- c(14754, 14486, 14089, 13692, 13271, 12633, 12878, NA, NA, NA, NA)
adm.tpv	<- c(7484, 7385, 7459,	7328,	6602,	6396,	6339, NA, NA, NA, NA)
adm.atp <- c(1524, 1754, 1805,	1940,	1888,	1830,	2058, NA, NA, NA, NA)
adm.other <- c(612 ,481, 385,	357,	755,	624,	405, NA, NA, NA, NA)


rel.total <- c(26397, 25327,	24935,	23989,	13544,	22354,	22628,  NA, NA, NA, NA)
rel.par <- c(8998, 8323,8335,	8045,	7971,	7492,	7458, NA, NA, NA, NA)
rel.cr <- c(11073, 10773,	10326,	9910,	9457,	9051,	8834, NA, NA, NA, NA)
rel.atp <- c(1418, 1708, 1830,	1833,	1959,	1716,	1981, NA, NA, NA, NA)
rel.max.exp <- c(2863, 22664,	2691,	2533,	2434,	2303,	2369, NA, NA, NA, NA)
rel.max.exp.prs <- c(1281,	1227,	1164,	1105,	1128,	1232,	1479, NA, NA, NA, NA)
rel.other <- c(764, 632, 589,	563,	595,	560,	607, NA, NA, NA, NA)


var <- list(year, pop,
            adm.total, adm.new, adm.tpv, adm.atp, adm.other,
            rel.total, rel.par, rel.cr, rel.atp, rel.max.exp, rel.max.exp.prs, rel.other)

report <- data.frame(var)

colnames(report) <- NA

var.name <-c("year", "pop",
             "adm.total", "adm.new", "adm.tpv", "adm.atp", "adm.other",
             "rel.total", "rel.par", "rel.cr", "rel.atp", "rel.max.exp",
	     "rel.max.exp.prs", "rel.other")

colnames(report) <- var.name

# Lag Variable

tmp <- report %>%
   mutate(pop.lag1 = dplyr:: lag(pop, n=1, default=NA),
          adm.lag1 = dplyr:: lag(adm.total, n=1, default=NA),
          rel.lag1 = dplyr:: lag(rel.total, n=1, default=NA),
          delta.pop=(pop-pop.lag1)/pop.lag1)

tmp <- t(tmp)

colnames(tmp) <- paste0("y", seq(2010, 2020, by=1))

agg  <- data.frame(tmp, var=rownames(tmp))

## Estimate Population
x <- agg %>% filter(var=="pop") %>%
mutate(weighted.avg=(y2016*1+ y2017*1 + y2018*2 + y2019*2+ y2020*3)/9)

weighted.avg.pop <- x$weighted.avg

x <- agg %>% filter(var=="delta.pop") %>%
mutate(weighted.delta=((y2017*1 + y2018*2 + y2019*2 + y2020*3)/8)*4)

weighted.delta.pop <- x$weighted.delta


N2030 <- weighted.avg.pop*(1+weighted.delta.pop)
N2020 <- agg[agg$var=="pop","y2020"]

d <- (N2030-N2020)/10

proj.pop <-round(seq(N2020+d, N2030, by=d))
new.pop <- c(pop, proj.pop)

year<-seq(2010, 2030, by=1)

df20<- data.frame(year,  new.pop)

write.csv(df20, "Data/projection.doccs.csv")


## Projection of Share of Technical Parole Violation


# Calculate N population for technical parole violation
## Tempoary

Ns <- read.csv("Data/Ns.csv")

xotmp <-Ns[1:2, -24]
tmp <- data.frame(t(tmp))
tmp <- tmp[-1,]

year <- seq(1995, 2016, by=1)

tmp <- data.frame(tmp, year)

tmp <-
tmp %>% select(year, original=X1, pol1=X2) %>%
mutate(n.TPV=original-pol1,
       prop.TPV=(original-pol1)/original) %>%
filter(year>=2010)

## technical parole violation+ parole with a  new sentence
## DOCCS SSCARPE DATA DO NOT DIFFEERENTIATE BETWEEN TECHNICAL PAROLE VIOLATION
## ADN TECHNICAL PAROLE VIOLATION WITH A NEW SENTENCE
## just aapply the proportion of TPV in the past


## Feb 2020

x <- ds %>% select(adm.type) %>% table() %>% data.frame() %>%
filter(.=="Parole/Cond.Rel Revoc") %>% select(Freq)

tpv.2020<- x$Freq


# Lag Variable

tmp2 <- tmp %>%
   mutate(pop.lag1 = dplyr:: lag(original, n=1, default=NA),
          TPV.lag1 = dplyr:: lag(n.TPV, n=1, default=NA),
          delta.TPV=(n.TPV-TPV.lag1)/TPV.lag1)

tmp2 <- t(tmp2)

colnames(tmp2) <- paste0("y", seq(2010, 2016, by=1))

agg.tpv  <- data.frame(tmp2, var=rownames(tmp2))

## Estimate Population
x <- agg.tpv %>% filter(var=="n.TPV") %>%
mutate(weighted.avg=(y2012*1+ y2013*1 + y2014*2 + y2015*2+ y2016*3)/9)

weighted.avg.tpv <- x$weighted.avg

x <- agg.tpv %>% filter(var=="delta.TPV") %>%
mutate(weighted.delta=((y2013*1 + y2014*2 + y2015*2 + y2016*3)/8)*4)

weighted.delta.tpv <- x$weighted.delta


N2026.tpv <- weighted.avg.tpv*(1+weighted.delta.tpv)
N2016.tpv <- agg.tpv[agg.tpv$var=="n.TPV","y2016"]


d <- (N2026.tpv-N2016.tpv)/10

proj.pop.tpv <-round(seq(N2016.tpv+d, N2016.tpv+d*14, by=d))


x <- agg.tpv[agg.tpv$var=="n.TPV",1:7]
x <- t(x)
n.TPV <- x[1:7]

new.pop.tpv <- c(n.TPV, proj.pop.tpv)

year <-seq(2010, 2030, by=1)

df20.tpv<- data.frame(year,  new.pop.tpv)

merge(df20, df20.tpv, by=year)

x <- merge(df20, df20.tpv, by="year")

write.csv(x, "Data/projection.doccs.csv")

#+end_src

* [Step 4] Prospective Impact Estimation ------------------------------------------------------------
** Parole Reform
*** DONE Reform#1: No Admission for Technical Parole Violation (reform1)
#+begin_src R :session :results silent

# Reform#1: No Admission for Technical Parole Violation
# Identify those who were admitted for TPV between 2009-2016
# Create admission and release dates for an alternate scenario
p1a <- ds %>%
   mutate(
      p1.elig=ifelse(adm.type=="Parole/Cond.Rel Revoc",1,0),
      p1.elig.yr=ifelse(p1.elig==1 & year(date.adm)>=2021, year(date.adm), # Admission after 2021
                 ifelse(p1.elig==1 & year(date.adm)<2021, 2021, NA)), # Admission before 2021
      p1.date.adm=ifelse(p1.elig==1 & year(date.adm)>=2021, NA, date.adm),
      p1.date.rel=ifelse(p1.elig==1 & year(date.adm)>=2021, NA,
                  ifelse(p1.elig==1 & year(date.adm)<2021,
                         as.Date("2021-01-01", format="%Y-%m-%d"),
                         NA)),
      p1.date.adm=as.Date(p1.date.adm, format="%Y-%m-%d"),
      p1.date.rel=as.Date(p1.date.rel, format="%Y-%m-%d"))

reform1a <- p1a %>%
   select(id, p1.elig:p1.date.rel) %>%
   select(id, p1.elig, p1.elig.yr, p1.date.adm, p1.date.rel) %>%
   dplyr::rename(p1a.elig=p1.elig,
                 p1a.elig.yr=p1.elig.yr,
		 p1a.date.adm=p1.date.adm,
		 p1a.date.rel=p1.date.rel)

p1a.elig.rel.N <- p1a %>% filter(p1.elig==1) %>% select(p1.elig.yr) %>% table(useNA="always") %>% addmargins()


#+end_src

*** DONE Reform#2: Elderly parole release (reform2)
#+begin_src R :session :results silent

# Reform#2: Elderly parole release

## EXPLANATION OF ESTIMATING THE IMPACT OF ELDERLY PAROLE RELEASE

## IDENTIFY THOSE WHO WOULD 'BENEFIT' FROM THE REFORM
## APPLY DISTRIBUTION OF PAROLE RELEASE IN A SIMPLISTIC FORM
## LOOK AT THE DISTRIBUTION OF PAROLE RELEASE
##      - WHAT'S THE AVERAGE YEARS IT TAKES FOR INDIVIDUAL BEFORE RELEASE
## ESTIMATE PROJECTED RELEASE DATES BASED ON THE EXISTING PATTERNS
## EMPRICIAL EVIDENCE ON THE RELEASE RATE


# What does the distribution of release look like for those who served 15+ years ?  (rel.dist)
### For those who were on indeterminate sentence and were released,
### how long does it usually take before they are released?
### Those who were on indeterminate sentence AND
### were released to community (exclude death,transfer,other,etc) AND
### served 15 years or longer
### Exclude who were released before parole eligible date
### Also Exclude those who had parole eligible date before new date based on the policy
### since they are not relevant to the elderly parole release


## Scenario #1: Use the parole grant rate for those who went to parole board after serving 15 years for indeterminate sentence

# Identify those who meet the criteria each year:
## Age 55+ AND Served 15+ years AND not yet reached parole eligible date AND not yet released or

set.seed(4634)

prob<- as.vector(rel.dist[,2])
yrs <- as.vector(rel.dist[,1])

p2a <- ds %>%
   mutate(
      date.age55=as.Date(DOB+55*365), # date when age 55
      date.served15=as.Date(DOB+15*365), # date when served 15 yrs
      date.elig2=as.Date(ifelse(date.age55>date.served15, date.age55, date.served15)), # earlest date meeting both criteria
      p2.elig=ifelse(adm.type!="New Commitment", 0, # exclude anyone not serving a sentence on commitment crime
              ifelse(str_detect(sent.type, "Indeterminate")==FALSE, 0, # exclude if not indeterminate
              ifelse(date.elig2<par.elig.date, 1, 0))),  # available for earlier parole under this reform
      p2.elig.yr=ifelse(p2.elig==1 & year(date.elig2)<2021, 2021,
                 ifelse(p2.elig==1, year(date.elig2), NA)),
      date.elig2=ifelse(p2.elig==1 & year(date.elig2)<2021, ymd("2021-01-01"), date.elig2),
      date.elig2=as.Date(date.elig2, format="%Y-%m-%d"),
      p2.proj.yrs = ifelse(p2.elig==1,
                           sample(yrs, size=n(), prob=prob, replace=TRUE),
			   NA),
      p2.date.adm= date.adm,
      p2.date.rel= ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<cond.rel.date,
                          date.elig2+years(p2.proj.yrs),
                   ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<max.exp.date,
                          date.elig2+years(p2.proj.yrs),
		   ifelse(!is.na(cond.rel.date), cond.rel.date,
                   ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
      p2.date.rel=ifelse(p2.elig==1 & is.na(p2.date.rel), date.elig2+years(p2.proj.yrs),
                         p2.date.rel),
      p2.date.rel=as.Date(p2.date.rel, format="%Y-%m-%d"),
      p2.rel.type = ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<cond.rel.date,
                          "cond:date.elig2+years(p2.proj.yrs)",
                   ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<max.exp.date,
                          "max:date.elig2+years(p2.proj.yrs)",
		   ifelse(!is.na(cond.rel.date), "cond.rel.date",
                   ifelse(!is.na(max.exp.date), "max.exp.date", NA)))),
      p2.rel.type = ifelse(p2.elig==1 & is.na(p2.rel.type),
                            "missing:date.elig2+years(p2.proj.yrs)", p2.rel.type))%>%
      mutate(p2.adm.yr=year(p2.date.adm),
             p2.rel.yr=year(p2.date.rel))

reform2a <- p2a %>%
      select(id, p2.elig, p2.elig.yr, p2.date.adm, p2.date.rel) %>%
      dplyr::rename(p2a.elig=p2.elig,
                    p2a.elig.yr=p2.elig.yr,
		    p2a.date.adm=p2.date.adm,
		    p2a.date.rel=p2.date.rel)

p2a.elig.rel.N <- p2a %>%
   filter(p2.elig==1 &str_detect(p2.rel.type, "p2\\.proj\\.yrs")) %>%
   select(p2.rel.yr) %>% table(useNA="always") %>% addmargins() %>% data.frame() %>%
   dplyr::rename(p2a= Freq)


## Scenario #2: Use the overall parole grant rate for indeterminate (release rate doubled)
prob<- as.vector(rel.dist[,2])
yrs <- as.vector(rel.dist[,1])

prob <- prob*2
index <- which(cumsum(prob)>1)
prob[index[1:length(index)]]<-0
prob[index[1]] <- 1-sum(prob)

yrs<- yrs[1:length(prob)]

# Identify those who meet the criteria each year:
## Age 55+ AND Served 15+ years AND not yet reached parole eligible date AND not yet released or

## Random assignment of release rate
## Change projected release date with the maximum expiration date, if projected release date is later than maximum expiration date

set.seed(4634)

p2b <- ds %>%
   mutate(
      date.age55=as.Date(DOB+55*365), # date when age 55
      date.served15=as.Date(DOB+15*365), # date when served 15 yrs
      date.elig2=as.Date(ifelse(date.age55>date.served15, date.age55, date.served15)), # earlest date meeting both criteria
      p2.elig=ifelse(adm.type!="New Commitment", 0, # exclude anyone not serving a sentence on commitment crime
              ifelse(str_detect(sent.type, "Indeterminate")==FALSE, 0, # exclude if not indeterminate
              ifelse(date.elig2<par.elig.date, 1, 0))),  # available for earlier parole under this reform
      p2.elig.yr=ifelse(p2.elig==1 & year(date.elig2)<2021, 2021,
                 ifelse(p2.elig==1, year(date.elig2), NA)),
      date.elig2=ifelse(p2.elig==1 & year(date.elig2)<2021, ymd("2021-01-01"), date.elig2),
      date.elig2=as.Date(date.elig2, format="%Y-%m-%d"),
      p2.proj.yrs = ifelse(p2.elig==1,
                           sample(yrs, size=n(), prob=prob, replace=TRUE),
			   NA),
      p2.date.adm= date.adm,
      p2.date.rel= ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<cond.rel.date,
                          date.elig2+years(p2.proj.yrs),
                   ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<max.exp.date,
                          date.elig2+years(p2.proj.yrs),
		   ifelse(!is.na(cond.rel.date), cond.rel.date,
                   ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
      p2.date.rel=ifelse(p2.elig==1 & is.na(p2.date.rel), date.elig2+years(p2.proj.yrs),
                         p2.date.rel),
      p2.date.rel=as.Date(p2.date.rel, format="%Y-%m-%d"),
      p2.rel.type = ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<cond.rel.date,
                          "cond:date.elig2+years(p2.proj.yrs)",
                   ifelse(p2.elig==1 & date.elig2+years(p2.proj.yrs)<max.exp.date,
                          "max:date.elig2+years(p2.proj.yrs)",
		   ifelse(!is.na(cond.rel.date), "cond.rel.date",
                   ifelse(!is.na(max.exp.date), "max.exp.date", NA)))),
      p2.rel.type = ifelse(p2.elig==1 & is.na(p2.rel.type),
                            "missing:date.elig2+years(p2.proj.yrs)", p2.rel.type))%>%
      mutate(p2.adm.yr=year(p2.date.adm),
             p2.rel.yr=year(p2.date.rel))

reform2b <- p2b %>%
      select(id, p2.elig, p2.elig.yr, p2.date.adm, p2.date.rel) %>%
      dplyr::rename(p2b.elig=p2.elig,
                    p2b.elig.yr=p2.elig.yr,
		    p2b.date.adm=p2.date.adm,
		    p2b.date.rel=p2.date.rel)

p2b.elig.rel.N <- p2b %>%
   filter(p2.elig==1 &str_detect(p2.rel.type, "p2\\.proj\\.yrs")) %>%
   select(p2.rel.yr) %>% table(useNA="always") %>% addmargins() %>% data.frame() %>%
   dplyr::rename(p2b= Freq)


#+end_src

*** DONE Reform#3: Fair and Timely Parole (reform3) - Presumptive Release
#+begin_src R :session :results silent

## EXPLANATION OF ESTIMATING THE IMPACT OF PRESUMPTIVE RELEASE

## WHAT DOES PRESUMPTIVE RELEASE LOOK LIKE?
## START WITH THE MOST PROGRESSIVE REFORM

## Scenario #1:
## THE MOST PROGRESSIVE REFORM -- 100% RELEASE AT THE EARLIEST PAROLE DATE(Unrealistic)

p3a <- ds %>%
   mutate(
      date.elig3=ifelse(adm.type=="New Commitment" & str_detect(sent.type, "Indeterminate"), par.elig.date, NA),
      date.elig3= as.Date(date.elig3, format="%Y-%m-%d"),
      p3.elig=ifelse(adm.type!="New Commitment", 0, # Exclude anyone not serving a sentence
              ifelse(str_detect(sent.type, "Indeterminate") & !is.na(date.elig3), 1,
              0)),
      p3.elig.yr=ifelse(p3.elig==1 & year(date.elig3)>=2021, year(date.elig3),
                 ifelse(p3.elig==1 & year(date.elig3)<2021, 2021, NA)),
      date.elig3=ifelse(p3.elig==1 & year(date.elig3)<2021, as.Date("2021-01-01", format="%Y-%m-%d"),
                        date.elig3),
      date.elig3=as.Date(date.elig3, format="%Y-%m-%d"),
      p3.date.adm=date.adm,
      p3.date.rel=ifelse(p3.elig==1 & year(date.elig3)<2021,
                         as.Date("2021-01-01", format="%Y-%m-%d"), # Anyone eligible for parole before 2021 be released in 2021
                  ifelse(p3.elig==1 & date.elig3<cond.rel.date, date.elig3,
		  ifelse(p3.elig==1 & date.elig3>cond.rel.date, cond.rel.date,
                  ifelse(!is.na(cond.rel.date), cond.rel.date,
                  ifelse(!is.na(max.exp.date), max.exp.date, NA))))),
      p3.date.rel=ifelse(p3.elig==1 & is.na(p3.date.rel), date.elig3, p3.date.rel),
      p3.date.rel=as.Date(p3.date.rel, format="%Y-%m-%d"),
      p3.rel.type=ifelse(p3.elig==1 & year(date.elig3)<2021,
                         "2021-01-01", # Anyone eligible for parole before 2021 be released in 2021
                  ifelse(p3.elig==1 & date.elig3<cond.rel.date,
                         "(date.elig3<cond.rel.date)date.elig3",
		  ifelse(p3.elig==1 & date.elig3>cond.rel.date, "(date.elig3>cond.rel.date)cond.rel.date",
                  ifelse(!is.na(cond.rel.date), "cond.rel.date",
                  ifelse(!is.na(max.exp.date), "max.exp.date", NA))))),
      p3.rel.type=ifelse(p3.elig==1 & is.na(p3.rel.type), "(missing)date.elig3",
                              p3.rel.type)) %>%
      mutate(p3.rel.yr=year(p3.date.rel))

reform3a <- p3a %>%
      select(id, p3.elig, p3.elig.yr, p3.date.adm, p3.date.rel) %>%
      dplyr::rename(p3a.elig=p3.elig,
                    p3a.elig.yr=p3.elig.yr,
		    p3a.date.adm=p3.date.adm,
		    p3a.date.rel=p3.date.rel)


p3a.elig.rel.N <- p3a %>%
   filter(p3.elig==1 &str_detect(p3.rel.type, "\\)date.elig3")) %>%
   select(p3.rel.yr) %>% table(useNA="always") %>% addmargins() %>% data.frame() %>%
   dplyr::rename(p3a= Freq)


## Scenario #2:
## 70% RELEASE AT THE EARLIEST PAROLE DATE
## Assumption about release year distribution

prob <- c(0.4, 0.2, 0.1, 0.3)
yrs <- c(0, 2, 4, 90) ## 90 means no release under this reform

p3b <- ds %>%
   mutate(
      date.elig3=ifelse(adm.type=="New Commitment" & str_detect(sent.type, "Indeterminate"), par.elig.date, NA),
      date.elig3= as.Date(date.elig3, format="%Y-%m-%d"),
      p3.elig=ifelse(adm.type!="New Commitment", 0, # Exclude anyone not serving a sentence
              ifelse(str_detect(sent.type, "Indeterminate") & !is.na(date.elig3), 1,
              0)),
      p3.elig.yr=ifelse(p3.elig==1 & year(date.elig3)>=2021, year(date.elig3),
                 ifelse(p3.elig==1 & year(date.elig3)<2021, 2021, NA)),
      date.elig3=ifelse(p3.elig==1 & year(date.elig3)<2021, as.Date("2021-01-01", format="%Y-%m-%d"),
                        date.elig3),
      date.elig3=as.Date(date.elig3, format="%Y-%m-%d"),
      p3.proj.yrs = ifelse(p3.elig==1,
                           sample(yrs, size=n(), prob=prob, replace=TRUE), NA),
      p3.date.adm=date.adm,
      p3.date.rel= ifelse(p3.elig==1 & date.elig3+years(p3.proj.yrs)<cond.rel.date,
                          date.elig3+years(p3.proj.yrs),
                   ifelse(p3.elig==1 & date.elig3+years(p3.proj.yrs)<max.exp.date,
                          date.elig3+years(p3.proj.yrs),
		   ifelse(!is.na(cond.rel.date), cond.rel.date,
                   ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
      p3.date.rel= ifelse(p3.elig==1 & is.na(p3.date.rel),
                          date.elig3+years(p3.proj.yrs), p3.date.rel),
      p3.date.rel=as.Date(p3.date.rel, format="%Y-%m-%d"),
      p3.rel.type= ifelse(p3.elig==1 & date.elig3+years(p3.proj.yrs)<cond.rel.date,
                          "(cond)date.elig3+years(p3.proj.yrs)",
                   ifelse(p3.elig==1 & date.elig3+years(p3.proj.yrs)<max.exp.date,
                          "(max)date.elig3+years(p3.proj.yrs)",
		   ifelse(!is.na(cond.rel.date), "cond.rel.date",
                   ifelse(!is.na(max.exp.date), "max.exp.date", NA)))),
      p3.rel.type= ifelse(p3.elig==1 & is.na(p3.rel.type),
                          "date.elig3+years(p3.proj.yrs)", p3.rel.type),
      p3.date.rel=as.Date(p3.date.rel, format="%Y-%m-%d")) %>%
      mutate(p3.rel.yr=year(p3.date.rel))

reform3b <- p3b %>%
      select(id, p3.elig, p3.elig.yr, p3.date.adm, p3.date.rel) %>%
      dplyr::rename(p3b.elig=p3.elig,
                    p3b.elig.yr=p3.elig.yr,
		    p3b.date.adm=p3.date.adm,
		    p3b.date.rel=p3.date.rel)

p3b.elig.rel.N <- p3b %>%
   filter(p3.elig==1 &str_detect(p3.rel.type, "p3\\.proj\\.yrs")) %>%
   select(p3.rel.yr) %>% table(useNA="always") %>% addmargins( ) %>% data.frame() %>%
   dplyr::rename(p3b= Freq)

#+end_src

*** DONE Reform#4: Second Look Bill (reform4)
#+begin_src R :session :results silent

# What does the distribution of release look like for those who would befefit from this law?
## Pure assumptions about release distribution (need to consult with the team)
## 20% release at the first application; 10% release at the second application(3yrs); 5% release at the third application(6years)
## 65% never released under thie law

prob <- c(0.1, 0.05, 0.05, 0.8)
yrs <- c(0, 3, 6, 90) ## 90 means no release under this reform

## Scenario #1 Brooklyn DA's Office Suggestion

# Identify those who meet the criteria:
## A Felony Conviction: Served 20+ years AND not yet reached parole eligible date AND not yet released
## Other Felony Conviction: Served 15+ years AND not yet reached parole eligible date AND not yet released
## Random assignment of resentencing rate (need some estimation about the distribution of release)
## If projected release date is after maximum expiration date, choose maximum expiration date

set.seed(4634)

p4a <- ds %>%
   mutate(
      date.served15=as.Date(sent.date+15*365, format="%Y-%m-%d"), # date when served 15 yrs
      date.served20=as.Date(sent.date+20*365, format="%Y-%m-%d"), # date when served 20 yrs
      date.elig4=as.Date(ifelse(str_detect(class1, "A"), date.served20,
                         ifelse(class1 %in% c("B", "C", "D", "E"), date.served15, NA))), # earlest date meeting criteria
      date.elig4=as.Date(date.elig4, format="%Y-%m-%d"),
      p4.elig=ifelse(adm.type!="New Commitment", 0,
              ifelse(!is.na(date.elig4), 1, 0)),
      p4.elig.yr=ifelse(p4.elig==1 & year(date.elig4)<2021, 2021,
                 ifelse(p4.elig==1, year(date.elig4), NA)),
      date.elig4=ifelse(p4.elig==1 & year(date.elig4)<2021, as.Date("2021-01-01", format="%Y-%m-%d"),
                        date.elig4),
      p4.proj.yrs=ifelse(p4.elig==1,
                         sample(yrs, size=n(), prob=prob, replace=TRUE), NA),
      p4.date.adm=date.adm,
      p4.date.rel=ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< cond.rel.date,
                         date.elig4+years(p4.proj.yrs),
                  ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< max.exp.date,
                         date.elig4+years(p4.proj.yrs),
	          ifelse(!is.na(cond.rel.date), cond.rel.date,
                  ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
      p4.date.rel=ifelse(p4.elig==1 & is.na(p4.date.rel), date.elig4+years(p4.proj.yrs),
                        p4.date.rel),
      p4.date.rel=as.Date(p4.date.rel, format="%Y-%m-%d"),
      p4.rel.type=ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< cond.rel.date,
                                 "(cond)date.elig4+years(p4.proj.yrs)",
                  ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< max.exp.date,
                         "(max)date.elig4+years(p4.proj.yrs)",
	          ifelse(!is.na(cond.rel.date), "cond.rel.date",
                  ifelse(!is.na(max.exp.date), "max.exp.date", NA)))),
      p4.rel.type=ifelse(p4.elig==1 & is.na(p4.rel.type),
                         "date.elig4+years(p4.proj.yrs)",
                        p4.rel.type)) %>%
   mutate(p4.adm.yr=year(p4.date.adm),
          p4.rel.yr=year(p4.date.rel))

reform4a <- p4a %>%
   select(id, p4.elig, p4.elig.yr, p4.date.adm, p4.date.rel) %>%
   dplyr::rename(p4a.elig=p4.elig,
                 p4a.elig.yr=p4.elig.yr,
		 p4a.date.adm=p4.date.adm,
		 p4a.date.rel=p4.date.rel)

p4a.elig.rel.N <- p4a %>%
   filter(p4.elig==1 &str_detect(p4.rel.type, "4\\.proj\\.yrs")) %>%
   select(p4.rel.yr) %>% table(useNA="always") %>% addmargins()  %>% data.frame() %>%
   dplyr::rename(p4a= Freq)


## Scenario #2 Senate/Assembly bill
## People sentenced longer than 10 years of maximum sentence AND
## Served 1/3 of maximum sentence AND
## Not serving a sentece for list charges (e.g. 125, 130, 263, money laundering to support terrorism)
## Have 2 more years before eligible for conditional release
## Eligible for reapplication every three years

set.seed(4634)

prob <- c(0.1, 0.05, 0.05, 0.8)
yrs <- c(0, 3, 6, 90) ## 90 means no release under this reform


# Create Charge Exclusion List
pl125 <- unique(ds$charge1[which(str_detect(ds$charge1, "(HOMICIDE|MANSLAUGH|MURDER)"))])
money.laundering.terror <-
   unique(ds$charge1[str_detect(ds$charge1, "MONEY") & str_detect(ds$charge1, "TERROR")])
pl130 <- unique(ds$charge1[which(str_detect(ds$charge1, "(SEXUAL|RAPE)"))])

pl263 <- unique(ds$charge1[which(str_detect(ds$charge1, "CHILD") &
                                 str_detect(ds$charge1, "SEX"))])

exclusion.list <- c(pl125, pl130, pl263, money.laundering.terror)


p4b <- ds %>%
   mutate(
     sent10plus=ifelse(max.sent.yr>=10, 1,0),    # Sentenced longer than 10 years
     date.served.third=as.Date(sent.date+days(round(agg.max.sent/3)), format="%Y-%d-%d"), # date when served 1/3 max sentence
     p4.elig=ifelse(adm.type!="New Commitment", 0, # Exclude anyone not serving a sentence
             ifelse(charge1 %in% exclusion.list, 0, # Charge Exclusion
	     ifelse(date.served.third<cond.rel.date-years(2), 1,
	     ifelse(is.na(cond.rel.date) & date.served.third<max.exp.date-years(2),1,
                    0)))),
     date.elig4=ifelse(p4.elig==1, date.served.third, NA),
     date.elig4=as.Date(date.elig4, format="%Y-%m-%d"),
     p4.elig.yr=ifelse(p4.elig==1 & year(date.elig4)<2021, 2021,
                ifelse(p4.elig==1, year(date.elig4), NA)),
     date.elig4=ifelse(p4.elig==1 & year(date.elig4)<2021, as.Date("2021-01-01", format="%Y-%m-%d"),
                       date.elig4),
     p4.proj.yrs=ifelse(p4.elig==1,
          	        sample(yrs, size=n(), prob=prob, replace=TRUE),NA),
     p4.date.adm=date.adm,
     p4.date.rel=ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< cond.rel.date,
                        date.elig4+years(p4.proj.yrs),
                 ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< max.exp.date,
                        date.elig4+years(p4.proj.yrs),
                 ifelse(!is.na(cond.rel.date), cond.rel.date,
                 ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
     p4.date.rel=ifelse(p4.elig==1 & is.na(p4.date.rel), date.elig4+years(p4.proj.yrs),
                        p4.date.rel),
     p4.date.rel=as.Date(p4.date.rel, format="%Y-%m-%d"),
     p4.rel.type=ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< cond.rel.date,
                             "(cond)date.elig4+years(p4.proj.yrs)",
                      ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)< max.exp.date,
                             "(max)date.elig4+years(p4.proj.yrs)",
	              ifelse(!is.na(cond.rel.date), "cond.rel.date",
                      ifelse(!is.na(max.exp.date), "max.exp.date", NA)))),
      p4.rel.type=ifelse(p4.elig==1 & is.na(p4.rel.type),
                              "(missing)date.elig4+years(p4.proj.yrs)", p4.rel.type)) %>%
   mutate(p4.adm.yr=year(p4.date.adm),
          p4.rel.yr=year(p4.date.rel))

reform4b <- p4b %>%
   select(id, p4.elig, p4.elig.yr, p4.date.adm, p4.date.rel) %>%
   dplyr::rename(p4b.elig=p4.elig,
                 p4b.elig.yr=p4.elig.yr,
		 p4b.date.adm=p4.date.adm,
		 p4b.date.rel=p4.date.rel)

p4b.elig.rel.N <- p4b %>%
   filter(p4.elig==1 &str_detect(p4.rel.type, "4\\.proj\\.yrs")) %>%
   select(p4.rel.yr) %>% table(useNA="always") %>% addmargins() %>% data.frame() %>%
   dplyr::rename(p4b= Freq)


## Scenario #3 West Virginia
## People sentenced longer than 10 years of maximum sentence AND served 10+ years
## Eligible for reapplication after 5 years; then every 2 years until exhausting the sentencing modification process
# Presumption of release for those who are 50 years or older

set.seed(4634)

prob <- c(0.1, 0.05, 0.05, 0.8)
yrs <- c(0, 5, 7, 90) ## 90 means no release under this reform

# Create Charge Exclusion List
p4c <- ds %>%
   mutate(
     date.age50=as.Date(DOB+50*365.25), # date when age 50
     sent10plus=ifelse(max.sent.yr>=10, 1,0),    # Sentenced longer than 10 years
     date.served.10yrs=as.Date(sent.date+years(10), format="%Y-%d-%d"), # date when served 10 years in prison
     p4.elig=ifelse(adm.type!="New Commitment", 0, # Exclude anyone not serving a sentence
	     ifelse(sent10plus==1 & date.served.10yrs <cond.rel.date, 1, # sentenced 10+ yrs AND served 10+ yrs
	     ifelse(sent10plus==1 & date.served.10yrs <max.exp.date, 1,
                    0))),
     p4.elig2=ifelse(adm.type!="New Commitment", 0, # Exclude anyone not serving a sentence
	     ifelse(sent10plus==1 & date.served.10yrs <cond.rel.date, 1, # sentenced 10+ yrs AND served 10+ yrs
	     ifelse(sent10plus==1 & date.served.10yrs <max.exp.date, 1,
                    0))),
     date.elig4=ifelse(p4.elig==1, date.served.10yrs, NA),
     date.elig4=as.Date(date.elig4, format="%Y-%m-%d"),
     p4.elig.yr=ifelse(p4.elig==1 & year(date.elig4)<2021, 2021,
                ifelse(p4.elig==1, year(date.elig4), NA)),
     date.elig4=ifelse(p4.elig==1 & year(date.elig4)<2021, as.Date("2021-01-01", format="%Y-%m-%d"),
                       date.elig4),
     p4.proj.yrs=ifelse(p4.elig==1,
                        sample(yrs, size=n(), prob=prob, replace=TRUE), NA),
     p4.date.adm=date.adm,
     p4.date.rel=ifelse(p4.elig==1 & date.elig4>date.age50, date.elig4,
                 ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)> date.age50,
                        date.elig4+years(p4.proj.yrs),
		 ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)<cond.rel.date,
		        date.elig4+years(p4.proj.yrs),
		 ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)<max.exp.date,
		        date.elig4+years(p4.proj.yrs),
                 ifelse(!is.na(cond.rel.date), cond.rel.date,
                 ifelse(!is.na(max.exp.date), max.exp.date, date.age85)))))),
     p4.date.rel=ifelse(p4.elig==1 & is.na(p4.date.rel), date.elig4+years(p4.proj.yrs), p4.date.rel),
     p4.date.rel=as.Date(p4.date.rel, format="%Y-%m-%d"),
     p4.rel.type=ifelse(p4.elig==1 & date.elig4>date.age50, "(age50)date.elig4",
                      ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)> date.age50,
                             "(age50)date.elig4+years(p4.proj.yrs)",
		      ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)<cond.rel.date,
		             "(cond)date.elig4+years(p4.proj.yrs)",
		      ifelse(p4.elig==1 & date.elig4+years(p4.proj.yrs)<max.exp.date,
		             "(max)date.elig4+years(p4.proj.yrs)",
                      ifelse(!is.na(cond.rel.date), "cond.rel.date",
                      ifelse(!is.na(max.exp.date), "max.exp.date", NA)))))),
     p4.rel.type=ifelse(p4.elig==1 & is.na(p4.rel.type),
                             "(missing)date.elig4+years(p4.proj.yrs)", p4.rel.type)) %>%
   mutate(p4.adm.yr=year(p4.date.adm),
          p4.rel.yr=year(p4.date.rel))

reform4c <- p4c %>%
     select(id, p4.elig, p4.elig.yr, p4.date.adm, p4.date.rel) %>%
     dplyr::rename(p4c.elig=p4.elig,
                   p4c.elig.yr=p4.elig.yr,
   		   p4c.date.adm=p4.date.adm,
		   p4c.date.rel=p4.date.rel)

p4c.elig.rel.N <- p4c %>%
   filter(p4.elig==1 &str_detect(p4.rel.type, "date\\.elig4")) %>%
   select(p4.rel.yr) %>% table(useNA="always") %>% addmargins() %>% data.frame() %>%
   dplyr::rename(p4c= Freq)


#+end_src

*** DONE Reform#5: Youth Parole (reform5)
#+begin_src R :session :results silent

# What does the distribution of release look like for those who served 15+ years ?  (rel.dist)
### For those who were on indeterminate sentence and were released,
### how long does it usually take before they are released?
### Those who were on indeterminate sentence AND
### were released to community (exclude death,transfer,other,etc) AND
### served 15 years or longer
### Exclude who were released before parole eligible date
### Also Exclude those who had parole eligible date before new date based on the policy
### since they are not relevant to the elderly parole release

## Scenario #1: Use the overall parole grant rate for those who went to parole board after serving 15 years in prison

prob<- as.vector(rel.dist[,2])
yrs <- as.vector(rel.dist[,1])

## Committed Crime Age Age Under 21
## Served 15+ Years
## No distinction by crime type
## If projected release date is later than the conditional release date, choose conditional release date
## If projected release date is later than the maximum expiration date, choose maximum expiration date

set.seed(435872)

p5a <- ds %>%
   mutate(
      date.elig5=as.Date(sent.date+15*365), # date when served 15 yrs; date eligible for parole
      youth=ifelse(age.crime<21, 1, 0),
      p5.elig=ifelse(adm.type!="New Commitment", 0,
                ifelse(youth==1 & date.elig5<par.elig.date,1, 0)), # sentenced under age21 and eligible before parole eligiblity date
      p5.elig.yr=ifelse(p5.elig==1 & year(date.elig5)<2021, 2021,
                 ifelse(p5.elig==1, year(date.elig5), NA)),
      date.elig5=ifelse(p5.elig==1 & year(date.elig5)<2021, as.Date("2021-01-01", format="%Y-%m-%d"),
                        date.elig5),
      date.elig5=as.Date(date.elig5, format="%Y-%m-%d"),
      p5.proj.yrs = ifelse(p5.elig==1,
                           sample(yrs, size=n(), prob=prob, replace=TRUE), # Random assignment of release rate
			   NA),
      p5.date.adm = date.adm,
      p5.date.rel= ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<cond.rel.date,
                          date.elig5+years(p5.proj.yrs),
                   ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<max.exp.date,
                          date.elig5+years(p5.proj.yrs),
	           ifelse(!is.na(cond.rel.date), cond.rel.date,
                   ifelse(!is.na(max.exp.date), max.exp.date, NA)))),
      p5.date.rel= ifelse(p5.elig==1 & is.na(p5.date.rel), date.elig5+years(p5.proj.yrs),
                          p5.date.rel),
      p5.date.rel=as.Date(p5.date.rel, format="%Y-%m-%d"),
      p5.rel.type= ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<cond.rel.date,
                              "(cond)date.elig5+years(p5.proj.yrs)",
                   ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<max.exp.date,
                          "(max)date.elig5+years(p5.proj.yrs)",
	           ifelse(!is.na(cond.rel.date), "cond.rel.date",
                   ifelse(!is.na(max.exp.date), "max.exp.date", NA)))),
      p5.rel.type= ifelse(p5.elig==1 & is.na(p5.rel.type), "(missing)date.elig5+years(p5.proj.yrs)",
                          p5.rel.type)) %>%
      mutate(p5.adm.yr=year(p5.date.adm),
             p5.rel.yr=year(p5.date.rel))


reform5a <- p5a  %>%
   select(id, p5.elig, p5.elig.yr, p5.date.adm, p5.date.rel) %>%
   dplyr::rename(p5a.elig=p5.elig,
                 p5a.elig.yr=p5.elig.yr,
		 p5a.date.adm=p5.date.adm,
		 p5a.date.rel=p5.date.rel)


p5a.elig.rel.N <- p5a %>%
   filter(p5.elig==1 &str_detect(p5.rel.type, "date\\.elig5")) %>%
   select(p5.rel.yr) %>% table(useNA="always") %>% addmargins() %>% data.frame() %>%
   dplyr::rename(p5a= Freq)


## Scenario #1 (Illinois)
### Crime committed under 21 years AND
### Served 10+ years
### Charges EXCEPT aggravated criminal sexual assault, predatory criminal sexual assault of a child
### First-degree murder: eligible for parole after serving 20+ years, except a term of natural life imprisonment


## Use the overall parole grant rate for those who went to parole board after serving 15 years in prison

prob<- as.vector(rel.dist[,2])
yrs <- as.vector(rel.dist[,1])

# Create Charge Exclusion List

agg.sex <- unique(ds$charge1[which(str_detect(ds$charge1, "AGG") & str_detect(ds$charge1, "SEX"))])

pred.sex.child<- unique(ds$charge1[which(str_detect(ds$charge1, "CHILD") & str_detect(ds$charge1, "SEX") &
                        str_detect(ds$charge1, "PRED"))])

exclusion.list <- c(agg.sex, pred.sex.child)

murder1 <- unique(ds$charge1[which(str_detect(ds$charge1, "MURDER") & str_detect(ds$charge1, "1ST"))])


set.seed(435872)

p5b <- ds %>%
   mutate(
      date.elig5=ifelse(charge1 %in% exclusion.list, NA,  # Not eligible for youth parole
                ifelse(charge1 %in% murder1, as.Date(sent.date+20*365.25, format="%Y-%m-%d"), # date when served 20 years for murder 1st degree
                       as.Date(sent.date+10*365.25, format="%Y-%m-%d"))), # date when served 10 yrs for all other charge
      date.elig5=as.Date(date.elig5, format="%Y-%m-%d"),
      youth=ifelse(age.crime<21, 1, 0),
      p5.elig=ifelse(adm.type!="New Commitment", 0,
              ifelse(sent.type=="LWOP", 0,
              ifelse(youth==1 & !is.na(date.elig5) & date.elig5< par.elig.date, 1, 0))),
      p5.elig.yr=ifelse(p5.elig==1 & year(date.elig5)<2021, 2021,
                 ifelse(p5.elig==1, year(date.elig5), NA)),
      date.elig5=ifelse(p5.elig==1 & year(date.elig5)<2021, as.Date("2021-01-01", format="%Y-%m-%d"),
                        date.elig5),
      date.elig5=as.Date(date.elig5, format="%Y-%m-%d"),
      p5.proj.yrs = ifelse(p5.elig==1,
                           sample(yrs, size=n(), prob=prob, replace=TRUE), # Random assignment of release rate
			   NA),
      p5.date.adm = date.adm,
      p5.date.rel= ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<cond.rel.date,
                          date.elig5+years(p5.proj.yrs),
                   ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<max.exp.date,
                          date.elig5+years(p5.proj.yrs),
	           ifelse(p5.elig==1, date.elig5+years(p5.proj.yrs),
	           ifelse(!is.na(cond.rel.date), cond.rel.date,
                   ifelse(!is.na(max.exp.date), max.exp.date, NA))))),
      p5.date.rel= ifelse(p5.elig==1 & is.na(p5.date.rel), date.elig5+years(p5.proj.yrs),
                           p5.date.rel),
      p5.date.rel=as.Date(p5.date.rel, format="%Y-%m-%d"),
      p5.rel.type= ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<cond.rel.date,
                          "(cond)date.elig5+years(p5.proj.yrs)",
                   ifelse(p5.elig==1 & date.elig5+years(p5.proj.yrs)<max.exp.date,
                          "(max)date.elig5+years(p5.proj.yrs)",
	           ifelse(p5.elig==1, "date.elig5+years(p5.proj.yrs)",
	           ifelse(!is.na(cond.rel.date), "cond.rel.date",
                   ifelse(!is.na(max.exp.date), "max.exp.date", NA))))),
      p5.rel.type= ifelse(p5.elig==1 & is.na(p5.rel.type), "(miss)date.elig5+years(p5.proj.yrs)",
                           p5.rel.type))  %>%
   mutate(p5.adm.yr=year(p5.date.adm),
          p5.rel.yr=year(p5.date.rel))

reform5b <- p5b %>%
      select(id, p5.elig, p5.elig.yr, p5.date.adm, p5.date.rel) %>%
      dplyr::rename(p5b.elig=p5.elig,
                    p5b.elig.yr=p5.elig.yr,
		    p5b.date.adm=p5.date.adm,
		    p5b.date.rel=p5.date.rel)

p5b.elig.rel.N <- p5b %>%
   filter(p5.elig==1 &str_detect(p5.rel.type, "p5\\.proj\\.yrs")) %>%
   select(p5.rel.yr) %>% table(useNA="always") %>% addmargins() %>% data.frame() %>%
   dplyr::rename(p5b= Freq)



#+end_src

*** DONE Porjecting Policy Impact (Overall)
#+begin_src R :session :results silent


total <- c(58378, 56315, 55979, 54865, 54141, 53103, 51744, 51466, 48932, 46244,
           43555, 42998, 42442, 41885, 41328, 40772, 40215, 39658, 39102, 38545,
	   37988)

year <- seq(2010, 2030, by=1)

TPV <- c(4771, 4815, 4825, 4919, 4620, 4822, 4756, 4744, 4731, 4719,
         4707, 4695, 4682, 4670, 4658, 4646, 4633, 4621, 4609, 4597,
	 4584)

df.pop <- data.frame(year, total, TPV)

models <- c("p1a", "p2a", "p2b", "p3a", "p3b", "p4a", "p4b", "p4c", "p5a", "p5b")


p2a.rel <- p2a.elig.rel.N$p2a[1:10]
p2b.rel <- p2b.elig.rel.N$p2b[1:10]
p3a.rel <- p3a.elig.rel.N$p3a[1:10]
p3b.rel <- p3b.elig.rel.N$p3b[1:10]
p4a.rel <- p4a.elig.rel.N$p4a[1:10]
p4b.rel <- p4b.elig.rel.N$p4b[1:10]
p4c.rel <- p4c.elig.rel.N$p4c[1:10]
p5a.rel <- p5a.elig.rel.N$p5a[1:10]
p5b.rel <- p5b.elig.rel.N$p5b[1:10]

col.list <- paste0(models, ".rel")
df.pol <- data.frame(year=seq(2021, 2030, by=1),
                   p2a.rel, p2b.rel, p3a.rel, p3b.rel,
                   p4a.rel, p4b.rel, p4c.rel, p5a.rel, p5b.rel)

df.pol <- df.pol %>%
mutate(
p2a.cum= cumsum(p2a.rel),
p2b.cum= cumsum(p2b.rel),
p3a.cum= cumsum(p3a.rel),
p3b.cum= cumsum(p3b.rel),
p4a.cum= cumsum(p4a.rel),
p4b.cum= cumsum(p4b.rel),
p4c.cum= cumsum(p4c.rel),
p5a.cum= cumsum(p5a.rel),
p5b.cum= cumsum(p5b.rel)
)


df.merged <-left_join(df.pop[12:21,], df.pol, by="year")

df.merged <- df.merged %>%
mutate(
p2a.pop =total-p2a.cum,
p2b.pop =total-p2b.cum,
p3a.pop =total-p3a.cum,
p3b.pop =total-p3b.cum,
p4a.pop =total-p4a.cum,
p4b.pop =total-p4b.cum,
p4c.pop =total-p4c.cum,
p5a.pop =total-p5a.cum,
p5b.pop =total-p5b.cum)

write.csv(df.merged, "data/policy.projection.csv")

#+end_src

